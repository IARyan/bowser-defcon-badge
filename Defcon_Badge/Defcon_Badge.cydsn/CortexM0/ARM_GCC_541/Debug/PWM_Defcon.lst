ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_Defcon.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_Defcon_initVar
  20              		.bss
  21              		.type	PWM_Defcon_initVar, %object
  22              		.size	PWM_Defcon_initVar, 1
  23              	PWM_Defcon_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_Defcon_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_Defcon_Start
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_Defcon_Start, %function
  31              	PWM_Defcon_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM_Defcon.c"
   1:Generated_Source\PSoC4/PWM_Defcon.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_Defcon.c **** * File Name: PWM_Defcon.c
   3:Generated_Source\PSoC4/PWM_Defcon.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM_Defcon.c **** *
   5:Generated_Source\PSoC4/PWM_Defcon.c **** * Description:
   6:Generated_Source\PSoC4/PWM_Defcon.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM_Defcon.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM_Defcon.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM_Defcon.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM_Defcon.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM_Defcon.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM_Defcon.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM_Defcon.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM_Defcon.c **** *
  15:Generated_Source\PSoC4/PWM_Defcon.c **** * Note:
  16:Generated_Source\PSoC4/PWM_Defcon.c **** *
  17:Generated_Source\PSoC4/PWM_Defcon.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM_Defcon.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM_Defcon.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM_Defcon.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM_Defcon.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM_Defcon.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM_Defcon.c **** 
  24:Generated_Source\PSoC4/PWM_Defcon.c **** #include "PWM_Defcon.h"
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 2


  25:Generated_Source\PSoC4/PWM_Defcon.c **** 
  26:Generated_Source\PSoC4/PWM_Defcon.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM_Defcon.c **** #ifdef PWM_Defcon_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM_Defcon.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM_Defcon.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* PWM_Defcon_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/PWM_Defcon.c **** 
  32:Generated_Source\PSoC4/PWM_Defcon.c **** uint8 PWM_Defcon_initVar = 0u;
  33:Generated_Source\PSoC4/PWM_Defcon.c **** 
  34:Generated_Source\PSoC4/PWM_Defcon.c **** 
  35:Generated_Source\PSoC4/PWM_Defcon.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM_Defcon.c **** * Function Name: PWM_Defcon_Start
  37:Generated_Source\PSoC4/PWM_Defcon.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM_Defcon.c **** *
  39:Generated_Source\PSoC4/PWM_Defcon.c **** * Summary:
  40:Generated_Source\PSoC4/PWM_Defcon.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM_Defcon.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM_Defcon.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM_Defcon.c **** *
  44:Generated_Source\PSoC4/PWM_Defcon.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
  46:Generated_Source\PSoC4/PWM_Defcon.c **** *
  47:Generated_Source\PSoC4/PWM_Defcon.c **** * Return:
  48:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
  49:Generated_Source\PSoC4/PWM_Defcon.c **** *
  50:Generated_Source\PSoC4/PWM_Defcon.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM_Defcon.c **** *  PWM_Defcon_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM_Defcon.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM_Defcon.c **** *
  54:Generated_Source\PSoC4/PWM_Defcon.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM_Defcon.c **** void PWM_Defcon_Start(void) 
  56:Generated_Source\PSoC4/PWM_Defcon.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC4/PWM_Defcon.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM_Defcon.c ****     if(PWM_Defcon_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC4/PWM_Defcon.c ****     {
  60:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_Defcon_Init
  61:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC4/PWM_Defcon.c ****     }
  63:Generated_Source\PSoC4/PWM_Defcon.c ****     PWM_Defcon_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_Defcon_Enable
  64:Generated_Source\PSoC4/PWM_Defcon.c **** 
  65:Generated_Source\PSoC4/PWM_Defcon.c **** }
  58              		.loc 1 65 0
  59 001a C046     		nop
  60 001c BD46     		mov	sp, r7
  61              		@ sp needed
  62 001e 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 0020 00000000 		.word	PWM_Defcon_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	PWM_Defcon_Start, .-PWM_Defcon_Start
  70              		.section	.text.PWM_Defcon_Init,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_Defcon_Init
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_Defcon_Init, %function
  76              	PWM_Defcon_Init:
  77              	.LFB1:
  66:Generated_Source\PSoC4/PWM_Defcon.c **** 
  67:Generated_Source\PSoC4/PWM_Defcon.c **** 
  68:Generated_Source\PSoC4/PWM_Defcon.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM_Defcon.c **** * Function Name: PWM_Defcon_Init
  70:Generated_Source\PSoC4/PWM_Defcon.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM_Defcon.c **** *
  72:Generated_Source\PSoC4/PWM_Defcon.c **** * Summary:
  73:Generated_Source\PSoC4/PWM_Defcon.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM_Defcon.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM_Defcon.c **** *  PWM_Defcon_Start().
  76:Generated_Source\PSoC4/PWM_Defcon.c **** *
  77:Generated_Source\PSoC4/PWM_Defcon.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
  79:Generated_Source\PSoC4/PWM_Defcon.c **** *
  80:Generated_Source\PSoC4/PWM_Defcon.c **** * Return:
  81:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
  82:Generated_Source\PSoC4/PWM_Defcon.c **** *
  83:Generated_Source\PSoC4/PWM_Defcon.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM_Defcon.c **** void PWM_Defcon_Init(void) 
  85:Generated_Source\PSoC4/PWM_Defcon.c **** {
  78              		.loc 1 85 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 90B5     		push	{r4, r7, lr}
  83              		.cfi_def_cfa_offset 12
  84              		.cfi_offset 4, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 4


  87 0002 83B0     		sub	sp, sp, #12
  88              		.cfi_def_cfa_offset 24
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UsingFixedFunction || PWM_Defcon_UseControl)
  87:Generated_Source\PSoC4/PWM_Defcon.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UsingFixedFunction || PWM_Defcon_UseControl) */
  89:Generated_Source\PSoC4/PWM_Defcon.c **** 
  90:Generated_Source\PSoC4/PWM_Defcon.c ****     #if(!PWM_Defcon_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(PWM_Defcon_UseStatus)
  92:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM_Defcon.c ****             uint8 PWM_Defcon_interruptState;
  94:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UseStatus) */
  95:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (!PWM_Defcon_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM_Defcon.c **** 
  97:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM_Defcon.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_CONTROL |= PWM_Defcon_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM_Defcon.c ****         #if (PWM_Defcon_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_CONTROL |= PWM_Defcon_CFG0_DB;
 102:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM_Defcon.c **** 
 104:Generated_Source\PSoC4/PWM_Defcon.c ****         ctrl = PWM_Defcon_CONTROL3 & ((uint8 )(~PWM_Defcon_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_CONTROL3 = ctrl | PWM_Defcon_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM_Defcon.c **** 
 107:Generated_Source\PSoC4/PWM_Defcon.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_RT1 &= ((uint8)(~PWM_Defcon_RT1_MASK));
 109:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_RT1 |= PWM_Defcon_SYNC;
 110:Generated_Source\PSoC4/PWM_Defcon.c **** 
 111:Generated_Source\PSoC4/PWM_Defcon.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_RT1 &= ((uint8)(~PWM_Defcon_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_RT1 |= PWM_Defcon_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM_Defcon.c **** 
 115:Generated_Source\PSoC4/PWM_Defcon.c ****     #elif (PWM_Defcon_UseControl)
 116:Generated_Source\PSoC4/PWM_Defcon.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM_Defcon.c ****         ctrl = PWM_Defcon_CONTROL & ((uint8)(~PWM_Defcon_CTRL_CMPMODE2_MASK)) &
  91              		.loc 1 117 0
  92 0006 214B     		ldr	r3, .L6
  93 0008 1B78     		ldrb	r3, [r3]
  94 000a DAB2     		uxtb	r2, r3
  95 000c FB1D     		adds	r3, r7, #7
  96 000e 3F21     		movs	r1, #63
  97 0010 8A43     		bics	r2, r1
  98 0012 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/PWM_Defcon.c ****                 ((uint8)(~PWM_Defcon_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_CONTROL = ctrl | PWM_Defcon_DEFAULT_COMPARE2_MODE |
  99              		.loc 1 119 0
 100 0014 1D4A     		ldr	r2, .L6
 101 0016 FB1D     		adds	r3, r7, #7
 102 0018 1B78     		ldrb	r3, [r3]
 103 001a 0921     		movs	r1, #9
 104 001c 0B43     		orrs	r3, r1
 105 001e DBB2     		uxtb	r3, r3
 106 0020 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC4/PWM_Defcon.c ****                                    PWM_Defcon_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM_Defcon.c **** 
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 5


 123:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (!PWM_Defcon_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM_Defcon.c ****         #if (PWM_Defcon_Resolution == 8)
 125:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_AUX_CONTROLDP0 |= (PWM_Defcon_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM_Defcon.c ****         #else /* (PWM_Defcon_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_AUX_CONTROLDP0 |= (PWM_Defcon_AUX_CTRL_FIFO0_CLR);
 107              		.loc 1 129 0
 108 0022 1B4A     		ldr	r2, .L6+4
 109 0024 1A4B     		ldr	r3, .L6+4
 110 0026 1B78     		ldrb	r3, [r3]
 111 0028 DBB2     		uxtb	r3, r3
 112 002a 0121     		movs	r1, #1
 113 002c 0B43     		orrs	r3, r1
 114 002e DBB2     		uxtb	r3, r3
 115 0030 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_AUX_CONTROLDP1 |= (PWM_Defcon_AUX_CTRL_FIFO0_CLR);
 116              		.loc 1 130 0
 117 0032 184A     		ldr	r2, .L6+8
 118 0034 174B     		ldr	r3, .L6+8
 119 0036 1B78     		ldrb	r3, [r3]
 120 0038 DBB2     		uxtb	r3, r3
 121 003a 0121     		movs	r1, #1
 122 003c 0B43     		orrs	r3, r1
 123 003e DBB2     		uxtb	r3, r3
 124 0040 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM_Defcon.c **** 
 133:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_WriteCounter(PWM_Defcon_INIT_PERIOD_VALUE);
 125              		.loc 1 133 0
 126 0042 C820     		movs	r0, #200
 127 0044 FFF7FEFF 		bl	PWM_Defcon_WriteCounter
 134:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (!PWM_Defcon_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM_Defcon.c **** 
 136:Generated_Source\PSoC4/PWM_Defcon.c ****     PWM_Defcon_WritePeriod(PWM_Defcon_INIT_PERIOD_VALUE);
 128              		.loc 1 136 0
 129 0048 C820     		movs	r0, #200
 130 004a FFF7FEFF 		bl	PWM_Defcon_WritePeriod
 137:Generated_Source\PSoC4/PWM_Defcon.c **** 
 138:Generated_Source\PSoC4/PWM_Defcon.c ****         #if (PWM_Defcon_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_WriteCompare(PWM_Defcon_INIT_COMPARE_VALUE1);
 131              		.loc 1 139 0
 132 004e C820     		movs	r0, #200
 133 0050 FFF7FEFF 		bl	PWM_Defcon_WriteCompare
 140:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 141:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_WriteCompare1(PWM_Defcon_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_WriteCompare2(PWM_Defcon_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM_Defcon.c **** 
 145:Generated_Source\PSoC4/PWM_Defcon.c ****         #if (PWM_Defcon_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_WriteKillTime(PWM_Defcon_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM_Defcon.c **** 
 149:Generated_Source\PSoC4/PWM_Defcon.c ****         #if (PWM_Defcon_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_WriteDeadTime(PWM_Defcon_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM_Defcon.c **** 
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 6


 153:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UseStatus || PWM_Defcon_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_SetInterruptMode(PWM_Defcon_INIT_INTERRUPTS_MODE);
 134              		.loc 1 154 0
 135 0054 0420     		movs	r0, #4
 136 0056 FFF7FEFF 		bl	PWM_Defcon_SetInterruptMode
 155:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UseStatus || PWM_Defcon_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM_Defcon.c **** 
 157:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM_Defcon.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_GLOBAL_ENABLE |= PWM_Defcon_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM_Defcon.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_CONTROL2 |= PWM_Defcon_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM_Defcon.c ****     #else
 163:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(PWM_Defcon_UseStatus)
 164:Generated_Source\PSoC4/PWM_Defcon.c **** 
 165:Generated_Source\PSoC4/PWM_Defcon.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_interruptState = CyEnterCriticalSection();
 137              		.loc 1 167 0
 138 005a BC1D     		adds	r4, r7, #6
 139 005c FFF7FEFF 		bl	CyEnterCriticalSection
 140 0060 0300     		movs	r3, r0
 141 0062 2370     		strb	r3, [r4]
 168:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_STATUS_AUX_CTRL |= PWM_Defcon_STATUS_ACTL_INT_EN_MASK;
 142              		.loc 1 169 0
 143 0064 0B4A     		ldr	r2, .L6+8
 144 0066 0B4B     		ldr	r3, .L6+8
 145 0068 1B78     		ldrb	r3, [r3]
 146 006a DBB2     		uxtb	r3, r3
 147 006c 1021     		movs	r1, #16
 148 006e 0B43     		orrs	r3, r1
 149 0070 DBB2     		uxtb	r3, r3
 150 0072 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC4/PWM_Defcon.c **** 
 171:Generated_Source\PSoC4/PWM_Defcon.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM_Defcon.c ****             CyExitCriticalSection(PWM_Defcon_interruptState);
 151              		.loc 1 172 0
 152 0074 BB1D     		adds	r3, r7, #6
 153 0076 1B78     		ldrb	r3, [r3]
 154 0078 1800     		movs	r0, r3
 155 007a FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC4/PWM_Defcon.c **** 
 174:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Clear the FIFO to enable the PWM_Defcon_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM_Defcon.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_ClearFIFO();
 156              		.loc 1 176 0
 157 007e FFF7FEFF 		bl	PWM_Defcon_ClearFIFO
 177:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UseStatus) */
 178:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM_Defcon.c **** }
 158              		.loc 1 179 0
 159 0082 C046     		nop
 160 0084 BD46     		mov	sp, r7
 161 0086 03B0     		add	sp, sp, #12
 162              		@ sp needed
 163 0088 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 7


 164              	.L7:
 165 008a C046     		.align	2
 166              	.L6:
 167 008c 71000F40 		.word	1074724977
 168 0090 90000F40 		.word	1074725008
 169 0094 91000F40 		.word	1074725009
 170              		.cfi_endproc
 171              	.LFE1:
 172              		.size	PWM_Defcon_Init, .-PWM_Defcon_Init
 173              		.section	.text.PWM_Defcon_Enable,"ax",%progbits
 174              		.align	2
 175              		.global	PWM_Defcon_Enable
 176              		.code	16
 177              		.thumb_func
 178              		.type	PWM_Defcon_Enable, %function
 179              	PWM_Defcon_Enable:
 180              	.LFB2:
 180:Generated_Source\PSoC4/PWM_Defcon.c **** 
 181:Generated_Source\PSoC4/PWM_Defcon.c **** 
 182:Generated_Source\PSoC4/PWM_Defcon.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM_Defcon.c **** * Function Name: PWM_Defcon_Enable
 184:Generated_Source\PSoC4/PWM_Defcon.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM_Defcon.c **** *
 186:Generated_Source\PSoC4/PWM_Defcon.c **** * Summary:
 187:Generated_Source\PSoC4/PWM_Defcon.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM_Defcon.c **** *
 189:Generated_Source\PSoC4/PWM_Defcon.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
 191:Generated_Source\PSoC4/PWM_Defcon.c **** *
 192:Generated_Source\PSoC4/PWM_Defcon.c **** * Return:
 193:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
 194:Generated_Source\PSoC4/PWM_Defcon.c **** *
 195:Generated_Source\PSoC4/PWM_Defcon.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM_Defcon.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM_Defcon.c **** *
 198:Generated_Source\PSoC4/PWM_Defcon.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM_Defcon.c **** void PWM_Defcon_Enable(void) 
 200:Generated_Source\PSoC4/PWM_Defcon.c **** {
 181              		.loc 1 200 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 80B5     		push	{r7, lr}
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 7, -8
 188              		.cfi_offset 14, -4
 189 0002 00AF     		add	r7, sp, #0
 190              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC4/PWM_Defcon.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_GLOBAL_ENABLE |= PWM_Defcon_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_GLOBAL_STBY_ENABLE |= PWM_Defcon_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM_Defcon.c **** 
 207:Generated_Source\PSoC4/PWM_Defcon.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UseControl || PWM_Defcon_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_CONTROL |= PWM_Defcon_CTRL_ENABLE;
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 8


 191              		.loc 1 209 0
 192 0004 0549     		ldr	r1, .L9
 193 0006 054B     		ldr	r3, .L9
 194 0008 1B78     		ldrb	r3, [r3]
 195 000a DBB2     		uxtb	r3, r3
 196 000c 8022     		movs	r2, #128
 197 000e 5242     		rsbs	r2, r2, #0
 198 0010 1343     		orrs	r3, r2
 199 0012 DBB2     		uxtb	r3, r3
 200 0014 0B70     		strb	r3, [r1]
 210:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UseControl || PWM_Defcon_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM_Defcon.c **** }
 201              		.loc 1 211 0
 202 0016 C046     		nop
 203 0018 BD46     		mov	sp, r7
 204              		@ sp needed
 205 001a 80BD     		pop	{r7, pc}
 206              	.L10:
 207              		.align	2
 208              	.L9:
 209 001c 71000F40 		.word	1074724977
 210              		.cfi_endproc
 211              	.LFE2:
 212              		.size	PWM_Defcon_Enable, .-PWM_Defcon_Enable
 213              		.section	.text.PWM_Defcon_Stop,"ax",%progbits
 214              		.align	2
 215              		.global	PWM_Defcon_Stop
 216              		.code	16
 217              		.thumb_func
 218              		.type	PWM_Defcon_Stop, %function
 219              	PWM_Defcon_Stop:
 220              	.LFB3:
 212:Generated_Source\PSoC4/PWM_Defcon.c **** 
 213:Generated_Source\PSoC4/PWM_Defcon.c **** 
 214:Generated_Source\PSoC4/PWM_Defcon.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM_Defcon.c **** * Function Name: PWM_Defcon_Stop
 216:Generated_Source\PSoC4/PWM_Defcon.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM_Defcon.c **** *
 218:Generated_Source\PSoC4/PWM_Defcon.c **** * Summary:
 219:Generated_Source\PSoC4/PWM_Defcon.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM_Defcon.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM_Defcon.c **** *
 222:Generated_Source\PSoC4/PWM_Defcon.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
 224:Generated_Source\PSoC4/PWM_Defcon.c **** *
 225:Generated_Source\PSoC4/PWM_Defcon.c **** * Return:
 226:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
 227:Generated_Source\PSoC4/PWM_Defcon.c **** *
 228:Generated_Source\PSoC4/PWM_Defcon.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM_Defcon.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM_Defcon.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM_Defcon.c **** *
 232:Generated_Source\PSoC4/PWM_Defcon.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM_Defcon.c **** void PWM_Defcon_Stop(void) 
 234:Generated_Source\PSoC4/PWM_Defcon.c **** {
 221              		.loc 1 234 0
 222              		.cfi_startproc
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 9


 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UseControl || PWM_Defcon_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_CONTROL &= ((uint8)(~PWM_Defcon_CTRL_ENABLE));
 231              		.loc 1 236 0
 232 0004 054A     		ldr	r2, .L12
 233 0006 054B     		ldr	r3, .L12
 234 0008 1B78     		ldrb	r3, [r3]
 235 000a DBB2     		uxtb	r3, r3
 236 000c 7F21     		movs	r1, #127
 237 000e 0B40     		ands	r3, r1
 238 0010 DBB2     		uxtb	r3, r3
 239 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UseControl || PWM_Defcon_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM_Defcon.c **** 
 239:Generated_Source\PSoC4/PWM_Defcon.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_GLOBAL_ENABLE &= ((uint8)(~PWM_Defcon_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM_Defcon.c ****         PWM_Defcon_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Defcon_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM_Defcon.c **** }
 240              		.loc 1 244 0
 241 0014 C046     		nop
 242 0016 BD46     		mov	sp, r7
 243              		@ sp needed
 244 0018 80BD     		pop	{r7, pc}
 245              	.L13:
 246 001a C046     		.align	2
 247              	.L12:
 248 001c 71000F40 		.word	1074724977
 249              		.cfi_endproc
 250              	.LFE3:
 251              		.size	PWM_Defcon_Stop, .-PWM_Defcon_Stop
 252              		.section	.text.PWM_Defcon_WriteCounter,"ax",%progbits
 253              		.align	2
 254              		.global	PWM_Defcon_WriteCounter
 255              		.code	16
 256              		.thumb_func
 257              		.type	PWM_Defcon_WriteCounter, %function
 258              	PWM_Defcon_WriteCounter:
 259              	.LFB4:
 245:Generated_Source\PSoC4/PWM_Defcon.c **** 
 246:Generated_Source\PSoC4/PWM_Defcon.c **** #if (PWM_Defcon_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM_Defcon.c **** 
 249:Generated_Source\PSoC4/PWM_Defcon.c **** 
 250:Generated_Source\PSoC4/PWM_Defcon.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM_Defcon.c ****         * Function Name: PWM_Defcon_SetCompareMode
 252:Generated_Source\PSoC4/PWM_Defcon.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 254:Generated_Source\PSoC4/PWM_Defcon.c ****         * Summary:
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 10


 255:Generated_Source\PSoC4/PWM_Defcon.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/PWM_Defcon.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 258:Generated_Source\PSoC4/PWM_Defcon.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM_Defcon.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM_Defcon.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 262:Generated_Source\PSoC4/PWM_Defcon.c ****         * Return:
 263:Generated_Source\PSoC4/PWM_Defcon.c ****         *  None
 264:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 265:Generated_Source\PSoC4/PWM_Defcon.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM_Defcon.c ****         void PWM_Defcon_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM_Defcon.c ****         {
 268:Generated_Source\PSoC4/PWM_Defcon.c ****             #if(PWM_Defcon_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM_Defcon.c **** 
 270:Generated_Source\PSoC4/PWM_Defcon.c ****                 #if(0 != PWM_Defcon_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM_Defcon.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Defcon_CTRL_CMPMOD
 272:Generated_Source\PSoC4/PWM_Defcon.c ****                 #else
 273:Generated_Source\PSoC4/PWM_Defcon.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM_Defcon.c ****                 #endif /* (0 != PWM_Defcon_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM_Defcon.c **** 
 276:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_CONTROL3 &= ((uint8)(~PWM_Defcon_CTRL_CMPMODE1_MASK)); /*Clear Existing 
 277:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM_Defcon.c **** 
 279:Generated_Source\PSoC4/PWM_Defcon.c ****             #elif (PWM_Defcon_UseControl)
 280:Generated_Source\PSoC4/PWM_Defcon.c **** 
 281:Generated_Source\PSoC4/PWM_Defcon.c ****                 #if(0 != PWM_Defcon_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM_Defcon.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Defcon_CTRL_CMPMO
 283:Generated_Source\PSoC4/PWM_Defcon.c ****                                                 PWM_Defcon_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM_Defcon.c ****                 #else
 285:Generated_Source\PSoC4/PWM_Defcon.c ****                     uint8 comparemode1masked = comparemode & PWM_Defcon_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM_Defcon.c ****                 #endif /* (0 != PWM_Defcon_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM_Defcon.c **** 
 288:Generated_Source\PSoC4/PWM_Defcon.c ****                 #if(0 != PWM_Defcon_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM_Defcon.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Defcon_CTRL_CMPMO
 290:Generated_Source\PSoC4/PWM_Defcon.c ****                                                PWM_Defcon_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM_Defcon.c ****                 #else
 292:Generated_Source\PSoC4/PWM_Defcon.c ****                     uint8 comparemode2masked = comparemode & PWM_Defcon_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM_Defcon.c ****                 #endif /* (0 != PWM_Defcon_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM_Defcon.c **** 
 295:Generated_Source\PSoC4/PWM_Defcon.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_CONTROL &= ((uint8)(~(PWM_Defcon_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM_Defcon.c ****                                             PWM_Defcon_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM_Defcon.c **** 
 300:Generated_Source\PSoC4/PWM_Defcon.c ****             #else
 301:Generated_Source\PSoC4/PWM_Defcon.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM_Defcon.c ****             #endif /* (PWM_Defcon_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM_Defcon.c ****         }
 304:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* PWM_Defcon_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM_Defcon.c **** 
 306:Generated_Source\PSoC4/PWM_Defcon.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM_Defcon.c **** 
 308:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM_Defcon.c **** 
 310:Generated_Source\PSoC4/PWM_Defcon.c **** 
 311:Generated_Source\PSoC4/PWM_Defcon.c ****         /*******************************************************************************
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 11


 312:Generated_Source\PSoC4/PWM_Defcon.c ****         * Function Name: PWM_Defcon_SetCompareMode1
 313:Generated_Source\PSoC4/PWM_Defcon.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 315:Generated_Source\PSoC4/PWM_Defcon.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM_Defcon.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 318:Generated_Source\PSoC4/PWM_Defcon.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM_Defcon.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM_Defcon.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 322:Generated_Source\PSoC4/PWM_Defcon.c ****         * Return:
 323:Generated_Source\PSoC4/PWM_Defcon.c ****         *  None
 324:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 325:Generated_Source\PSoC4/PWM_Defcon.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_Defcon.c ****         void PWM_Defcon_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM_Defcon.c ****         {
 328:Generated_Source\PSoC4/PWM_Defcon.c ****             #if(0 != PWM_Defcon_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM_Defcon.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Defcon_CTRL_CMPMODE1_S
 330:Generated_Source\PSoC4/PWM_Defcon.c ****                                            PWM_Defcon_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM_Defcon.c ****             #else
 332:Generated_Source\PSoC4/PWM_Defcon.c ****                 uint8 comparemodemasked = comparemode & PWM_Defcon_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM_Defcon.c ****             #endif /* (0 != PWM_Defcon_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM_Defcon.c **** 
 335:Generated_Source\PSoC4/PWM_Defcon.c ****             #if (PWM_Defcon_UseControl)
 336:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_CONTROL &= ((uint8)(~PWM_Defcon_CTRL_CMPMODE1_MASK)); /*Clear existing m
 337:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM_Defcon.c ****             #endif /* (PWM_Defcon_UseControl) */
 339:Generated_Source\PSoC4/PWM_Defcon.c ****         }
 340:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* PWM_Defcon_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM_Defcon.c **** 
 342:Generated_Source\PSoC4/PWM_Defcon.c **** #if (PWM_Defcon_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM_Defcon.c **** 
 344:Generated_Source\PSoC4/PWM_Defcon.c **** 
 345:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_SetCompareMode2
 347:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 349:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 352:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM_Defcon.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM_Defcon.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 356:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 357:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 358:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 359:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 362:Generated_Source\PSoC4/PWM_Defcon.c **** 
 363:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(0 != PWM_Defcon_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM_Defcon.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Defcon_CTRL_CMPMODE2_SHIFT
 365:Generated_Source\PSoC4/PWM_Defcon.c ****                                                  PWM_Defcon_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 367:Generated_Source\PSoC4/PWM_Defcon.c ****             uint8 comparemodemasked = comparemode & PWM_Defcon_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (0 != PWM_Defcon_CTRL_CMPMODE2_SHIFT) */
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 12


 369:Generated_Source\PSoC4/PWM_Defcon.c **** 
 370:Generated_Source\PSoC4/PWM_Defcon.c ****         #if (PWM_Defcon_UseControl)
 371:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_CONTROL &= ((uint8)(~PWM_Defcon_CTRL_CMPMODE2_MASK)); /*Clear existing mode 
 372:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UseControl) */
 374:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 375:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /*PWM_Defcon_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM_Defcon.c **** 
 377:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM_Defcon.c **** 
 379:Generated_Source\PSoC4/PWM_Defcon.c **** 
 380:Generated_Source\PSoC4/PWM_Defcon.c **** #if (!PWM_Defcon_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM_Defcon.c **** 
 382:Generated_Source\PSoC4/PWM_Defcon.c **** 
 383:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_WriteCounter
 385:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 387:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM_Defcon.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM_Defcon.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM_Defcon.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 393:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM_Defcon.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 396:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 397:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 398:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 399:Generated_Source\PSoC4/PWM_Defcon.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM_Defcon.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 402:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC4/PWM_Defcon.c ****                                        
 405:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 260              		.loc 1 405 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 0200     		movs	r2, r0
 273 0008 BB1D     		adds	r3, r7, #6
 274 000a 1A80     		strh	r2, [r3]
 406:Generated_Source\PSoC4/PWM_Defcon.c ****         CY_SET_REG16(PWM_Defcon_COUNTER_LSB_PTR, counter);
 275              		.loc 1 406 0
 276 000c 034A     		ldr	r2, .L15
 277 000e BB1D     		adds	r3, r7, #6
 278 0010 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 13


 279 0012 1380     		strh	r3, [r2]
 407:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 280              		.loc 1 407 0
 281 0014 C046     		nop
 282 0016 BD46     		mov	sp, r7
 283 0018 02B0     		add	sp, sp, #8
 284              		@ sp needed
 285 001a 80BD     		pop	{r7, pc}
 286              	.L16:
 287              		.align	2
 288              	.L15:
 289 001c 00100F40 		.word	1074728960
 290              		.cfi_endproc
 291              	.LFE4:
 292              		.size	PWM_Defcon_WriteCounter, .-PWM_Defcon_WriteCounter
 293              		.section	.text.PWM_Defcon_ReadCounter,"ax",%progbits
 294              		.align	2
 295              		.global	PWM_Defcon_ReadCounter
 296              		.code	16
 297              		.thumb_func
 298              		.type	PWM_Defcon_ReadCounter, %function
 299              	PWM_Defcon_ReadCounter:
 300              	.LFB5:
 408:Generated_Source\PSoC4/PWM_Defcon.c **** 
 409:Generated_Source\PSoC4/PWM_Defcon.c **** 
 410:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadCounter
 412:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 414:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM_Defcon.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 418:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 420:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 421:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 422:Generated_Source\PSoC4/PWM_Defcon.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 424:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM_Defcon.c ****     uint16 PWM_Defcon_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 301              		.loc 1 426 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC4/PWM_Defcon.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM_Defcon.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM_Defcon.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM_Defcon.c ****           (void)CY_GET_REG8(PWM_Defcon_COUNTERCAP_LSB_PTR_8BIT);
 311              		.loc 1 430 0
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 14


 312 0004 034B     		ldr	r3, .L19
 313 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM_Defcon.c **** 
 432:Generated_Source\PSoC4/PWM_Defcon.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM_Defcon.c ****         return (CY_GET_REG16(PWM_Defcon_CAPTURE_LSB_PTR));
 314              		.loc 1 433 0
 315 0008 034B     		ldr	r3, .L19+4
 316 000a 1B88     		ldrh	r3, [r3]
 317 000c 9BB2     		uxth	r3, r3
 434:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 318              		.loc 1 434 0
 319 000e 1800     		movs	r0, r3
 320 0010 BD46     		mov	sp, r7
 321              		@ sp needed
 322 0012 80BD     		pop	{r7, pc}
 323              	.L20:
 324              		.align	2
 325              	.L19:
 326 0014 10000F40 		.word	1074724880
 327 0018 A0100F40 		.word	1074729120
 328              		.cfi_endproc
 329              	.LFE5:
 330              		.size	PWM_Defcon_ReadCounter, .-PWM_Defcon_ReadCounter
 331              		.section	.text.PWM_Defcon_ClearFIFO,"ax",%progbits
 332              		.align	2
 333              		.global	PWM_Defcon_ClearFIFO
 334              		.code	16
 335              		.thumb_func
 336              		.type	PWM_Defcon_ClearFIFO, %function
 337              	PWM_Defcon_ClearFIFO:
 338              	.LFB6:
 435:Generated_Source\PSoC4/PWM_Defcon.c **** 
 436:Generated_Source\PSoC4/PWM_Defcon.c ****     #if (PWM_Defcon_UseStatus)
 437:Generated_Source\PSoC4/PWM_Defcon.c **** 
 438:Generated_Source\PSoC4/PWM_Defcon.c **** 
 439:Generated_Source\PSoC4/PWM_Defcon.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM_Defcon.c ****         * Function Name: PWM_Defcon_ClearFIFO
 441:Generated_Source\PSoC4/PWM_Defcon.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 443:Generated_Source\PSoC4/PWM_Defcon.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM_Defcon.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 446:Generated_Source\PSoC4/PWM_Defcon.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM_Defcon.c ****         *  None
 448:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 449:Generated_Source\PSoC4/PWM_Defcon.c ****         * Return:
 450:Generated_Source\PSoC4/PWM_Defcon.c ****         *  None
 451:Generated_Source\PSoC4/PWM_Defcon.c ****         *
 452:Generated_Source\PSoC4/PWM_Defcon.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM_Defcon.c ****         void PWM_Defcon_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM_Defcon.c ****         {
 339              		.loc 1 454 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 15


 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC4/PWM_Defcon.c ****             while(0u != (PWM_Defcon_ReadStatusRegister() & PWM_Defcon_STATUS_FIFONEMPTY))
 349              		.loc 1 455 0
 350 0004 01E0     		b	.L22
 351              	.L23:
 456:Generated_Source\PSoC4/PWM_Defcon.c ****             {
 457:Generated_Source\PSoC4/PWM_Defcon.c ****                 (void)PWM_Defcon_ReadCapture();
 352              		.loc 1 457 0
 353 0006 FFF7FEFF 		bl	PWM_Defcon_ReadCapture
 354              	.L22:
 455:Generated_Source\PSoC4/PWM_Defcon.c ****             while(0u != (PWM_Defcon_ReadStatusRegister() & PWM_Defcon_STATUS_FIFONEMPTY))
 355              		.loc 1 455 0
 356 000a FFF7FEFF 		bl	PWM_Defcon_ReadStatusRegister
 357 000e 0300     		movs	r3, r0
 358 0010 1A00     		movs	r2, r3
 359 0012 1023     		movs	r3, #16
 360 0014 1340     		ands	r3, r2
 361 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC4/PWM_Defcon.c ****             }
 459:Generated_Source\PSoC4/PWM_Defcon.c ****         }
 362              		.loc 1 459 0
 363 0018 C046     		nop
 364 001a BD46     		mov	sp, r7
 365              		@ sp needed
 366 001c 80BD     		pop	{r7, pc}
 367              		.cfi_endproc
 368              	.LFE6:
 369              		.size	PWM_Defcon_ClearFIFO, .-PWM_Defcon_ClearFIFO
 370 001e C046     		.section	.text.PWM_Defcon_WritePeriod,"ax",%progbits
 371              		.align	2
 372              		.global	PWM_Defcon_WritePeriod
 373              		.code	16
 374              		.thumb_func
 375              		.type	PWM_Defcon_WritePeriod, %function
 376              	PWM_Defcon_WritePeriod:
 377              	.LFB7:
 460:Generated_Source\PSoC4/PWM_Defcon.c **** 
 461:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* PWM_Defcon_UseStatus */
 462:Generated_Source\PSoC4/PWM_Defcon.c **** 
 463:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* !PWM_Defcon_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM_Defcon.c **** 
 465:Generated_Source\PSoC4/PWM_Defcon.c **** 
 466:Generated_Source\PSoC4/PWM_Defcon.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM_Defcon.c **** * Function Name: PWM_Defcon_WritePeriod
 468:Generated_Source\PSoC4/PWM_Defcon.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM_Defcon.c **** *
 470:Generated_Source\PSoC4/PWM_Defcon.c **** * Summary:
 471:Generated_Source\PSoC4/PWM_Defcon.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM_Defcon.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM_Defcon.c **** *
 474:Generated_Source\PSoC4/PWM_Defcon.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM_Defcon.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM_Defcon.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM_Defcon.c **** *
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 16


 478:Generated_Source\PSoC4/PWM_Defcon.c **** * Return:
 479:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
 480:Generated_Source\PSoC4/PWM_Defcon.c **** *
 481:Generated_Source\PSoC4/PWM_Defcon.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM_Defcon.c **** void PWM_Defcon_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC4/PWM_Defcon.c **** {
 378              		.loc 1 483 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 8
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382 0000 80B5     		push	{r7, lr}
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 82B0     		sub	sp, sp, #8
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
 390 0006 0200     		movs	r2, r0
 391 0008 BB1D     		adds	r3, r7, #6
 392 000a 1A80     		strh	r2, [r3]
 484:Generated_Source\PSoC4/PWM_Defcon.c ****     #if(PWM_Defcon_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM_Defcon.c ****         CY_SET_REG16(PWM_Defcon_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM_Defcon.c ****     #else
 487:Generated_Source\PSoC4/PWM_Defcon.c ****         CY_SET_REG16(PWM_Defcon_PERIOD_LSB_PTR, period);
 393              		.loc 1 487 0
 394 000c 034A     		ldr	r2, .L25
 395 000e BB1D     		adds	r3, r7, #6
 396 0010 1B88     		ldrh	r3, [r3]
 397 0012 1380     		strh	r3, [r2]
 488:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM_Defcon.c **** }
 398              		.loc 1 489 0
 399 0014 C046     		nop
 400 0016 BD46     		mov	sp, r7
 401 0018 02B0     		add	sp, sp, #8
 402              		@ sp needed
 403 001a 80BD     		pop	{r7, pc}
 404              	.L26:
 405              		.align	2
 406              	.L25:
 407 001c 80100F40 		.word	1074729088
 408              		.cfi_endproc
 409              	.LFE7:
 410              		.size	PWM_Defcon_WritePeriod, .-PWM_Defcon_WritePeriod
 411              		.section	.text.PWM_Defcon_WriteCompare,"ax",%progbits
 412              		.align	2
 413              		.global	PWM_Defcon_WriteCompare
 414              		.code	16
 415              		.thumb_func
 416              		.type	PWM_Defcon_WriteCompare, %function
 417              	PWM_Defcon_WriteCompare:
 418              	.LFB8:
 490:Generated_Source\PSoC4/PWM_Defcon.c **** 
 491:Generated_Source\PSoC4/PWM_Defcon.c **** #if (PWM_Defcon_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM_Defcon.c **** 
 493:Generated_Source\PSoC4/PWM_Defcon.c **** 
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 17


 494:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_WriteCompare
 496:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 498:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM_Defcon.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM_Defcon.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM_Defcon.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 505:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM_Defcon.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 508:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 509:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 510:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 511:Generated_Source\PSoC4/PWM_Defcon.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 515:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC4/PWM_Defcon.c ****                                        
 518:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 419              		.loc 1 518 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 431 0006 0200     		movs	r2, r0
 432 0008 BB1D     		adds	r3, r7, #6
 433 000a 1A80     		strh	r2, [r3]
 519:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(PWM_Defcon_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM_Defcon.c ****             CY_SET_REG16(PWM_Defcon_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 522:Generated_Source\PSoC4/PWM_Defcon.c ****             CY_SET_REG16(PWM_Defcon_COMPARE1_LSB_PTR, compare);
 434              		.loc 1 522 0
 435 000c 034A     		ldr	r2, .L28
 436 000e BB1D     		adds	r3, r7, #6
 437 0010 1B88     		ldrh	r3, [r3]
 438 0012 1380     		strh	r3, [r2]
 523:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM_Defcon.c **** 
 525:Generated_Source\PSoC4/PWM_Defcon.c ****         #if (PWM_Defcon_PWMMode == PWM_Defcon__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM_Defcon.c ****             #if(PWM_Defcon_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM_Defcon.c ****                 CY_SET_REG16(PWM_Defcon_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM_Defcon.c ****             #else
 529:Generated_Source\PSoC4/PWM_Defcon.c ****                 CY_SET_REG16(PWM_Defcon_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM_Defcon.c ****             #endif /* (PWM_Defcon_UsingFixedFunction) */
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 18


 531:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_PWMMode == PWM_Defcon__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 439              		.loc 1 532 0
 440 0014 C046     		nop
 441 0016 BD46     		mov	sp, r7
 442 0018 02B0     		add	sp, sp, #8
 443              		@ sp needed
 444 001a 80BD     		pop	{r7, pc}
 445              	.L29:
 446              		.align	2
 447              	.L28:
 448 001c 40100F40 		.word	1074729024
 449              		.cfi_endproc
 450              	.LFE8:
 451              		.size	PWM_Defcon_WriteCompare, .-PWM_Defcon_WriteCompare
 452              		.section	.text.PWM_Defcon_SetInterruptMode,"ax",%progbits
 453              		.align	2
 454              		.global	PWM_Defcon_SetInterruptMode
 455              		.code	16
 456              		.thumb_func
 457              		.type	PWM_Defcon_SetInterruptMode, %function
 458              	PWM_Defcon_SetInterruptMode:
 459              	.LFB9:
 533:Generated_Source\PSoC4/PWM_Defcon.c **** 
 534:Generated_Source\PSoC4/PWM_Defcon.c **** 
 535:Generated_Source\PSoC4/PWM_Defcon.c **** #else
 536:Generated_Source\PSoC4/PWM_Defcon.c **** 
 537:Generated_Source\PSoC4/PWM_Defcon.c **** 
 538:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_WriteCompare1
 540:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 542:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 543:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM_Defcon.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM_Defcon.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM_Defcon.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 548:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM_Defcon.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 551:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 552:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 553:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 554:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC4/PWM_Defcon.c ****                                         
 557:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 558:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(PWM_Defcon_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM_Defcon.c ****             CY_SET_REG16(PWM_Defcon_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 561:Generated_Source\PSoC4/PWM_Defcon.c ****             CY_SET_REG16(PWM_Defcon_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 564:Generated_Source\PSoC4/PWM_Defcon.c **** 
 565:Generated_Source\PSoC4/PWM_Defcon.c **** 
 566:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 19


 567:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_WriteCompare2
 568:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 570:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM_Defcon.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM_Defcon.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM_Defcon.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM_Defcon.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 577:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM_Defcon.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 580:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 581:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 582:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 583:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC4/PWM_Defcon.c ****                                         
 586:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 587:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(PWM_Defcon_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM_Defcon.c ****             CY_SET_REG16(PWM_Defcon_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 590:Generated_Source\PSoC4/PWM_Defcon.c ****             CY_SET_REG16(PWM_Defcon_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 593:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM_Defcon.c **** 
 595:Generated_Source\PSoC4/PWM_Defcon.c **** #if (PWM_Defcon_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM_Defcon.c **** 
 597:Generated_Source\PSoC4/PWM_Defcon.c **** 
 598:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_WriteDeadTime
 600:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 602:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 605:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM_Defcon.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 608:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 609:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 610:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 611:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 614:Generated_Source\PSoC4/PWM_Defcon.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(!PWM_Defcon_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM_Defcon.c ****             CY_SET_REG8(PWM_Defcon_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 618:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM_Defcon.c ****             PWM_Defcon_DEADBAND_COUNT &= ((uint8)(~PWM_Defcon_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM_Defcon.c **** 
 622:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM_Defcon.c ****             #if(PWM_Defcon_DEADBAND_COUNT_SHIFT)
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 20


 624:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Defcon_DEADBAND_COUNT_
 625:Generated_Source\PSoC4/PWM_Defcon.c ****                                                     PWM_Defcon_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM_Defcon.c ****             #else
 627:Generated_Source\PSoC4/PWM_Defcon.c ****                 PWM_Defcon_DEADBAND_COUNT |= deadtime & PWM_Defcon_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM_Defcon.c ****             #endif /* (PWM_Defcon_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM_Defcon.c **** 
 630:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (!PWM_Defcon_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 632:Generated_Source\PSoC4/PWM_Defcon.c **** 
 633:Generated_Source\PSoC4/PWM_Defcon.c **** 
 634:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadDeadTime
 636:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 638:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 641:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 643:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 644:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 645:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 647:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM_Defcon.c ****     uint8 PWM_Defcon_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 650:Generated_Source\PSoC4/PWM_Defcon.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(!PWM_Defcon_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM_Defcon.c ****             return (CY_GET_REG8(PWM_Defcon_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 654:Generated_Source\PSoC4/PWM_Defcon.c **** 
 655:Generated_Source\PSoC4/PWM_Defcon.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM_Defcon.c ****             #if(PWM_Defcon_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/PWM_Defcon.c ****                 return ((uint8)(((uint8)(PWM_Defcon_DEADBAND_COUNT & PWM_Defcon_DEADBAND_COUNT_MASK
 658:Generated_Source\PSoC4/PWM_Defcon.c ****                                                                            PWM_Defcon_DEADBAND_COUN
 659:Generated_Source\PSoC4/PWM_Defcon.c ****             #else
 660:Generated_Source\PSoC4/PWM_Defcon.c ****                 return (PWM_Defcon_DEADBAND_COUNT & PWM_Defcon_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM_Defcon.c ****             #endif /* (PWM_Defcon_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (!PWM_Defcon_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 664:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM_Defcon.c **** 
 666:Generated_Source\PSoC4/PWM_Defcon.c **** #if (PWM_Defcon_UseStatus || PWM_Defcon_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM_Defcon.c **** 
 668:Generated_Source\PSoC4/PWM_Defcon.c **** 
 669:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_SetInterruptMode
 671:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 673:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM_Defcon.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 677:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 680:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 21


 681:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 682:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 683:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 460              		.loc 1 685 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 8
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464 0000 80B5     		push	{r7, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 82B0     		sub	sp, sp, #8
 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              		.cfi_def_cfa_register 7
 472 0006 0200     		movs	r2, r0
 473 0008 FB1D     		adds	r3, r7, #7
 474 000a 1A70     		strb	r2, [r3]
 686:Generated_Source\PSoC4/PWM_Defcon.c ****         CY_SET_REG8(PWM_Defcon_STATUS_MASK_PTR, interruptMode);
 475              		.loc 1 686 0
 476 000c 034A     		ldr	r2, .L31
 477 000e FB1D     		adds	r3, r7, #7
 478 0010 1B78     		ldrb	r3, [r3]
 479 0012 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 480              		.loc 1 687 0
 481 0014 C046     		nop
 482 0016 BD46     		mov	sp, r7
 483 0018 02B0     		add	sp, sp, #8
 484              		@ sp needed
 485 001a 80BD     		pop	{r7, pc}
 486              	.L32:
 487              		.align	2
 488              	.L31:
 489 001c 81000F40 		.word	1074724993
 490              		.cfi_endproc
 491              	.LFE9:
 492              		.size	PWM_Defcon_SetInterruptMode, .-PWM_Defcon_SetInterruptMode
 493              		.section	.text.PWM_Defcon_ReadStatusRegister,"ax",%progbits
 494              		.align	2
 495              		.global	PWM_Defcon_ReadStatusRegister
 496              		.code	16
 497              		.thumb_func
 498              		.type	PWM_Defcon_ReadStatusRegister, %function
 499              	PWM_Defcon_ReadStatusRegister:
 500              	.LFB10:
 688:Generated_Source\PSoC4/PWM_Defcon.c **** 
 689:Generated_Source\PSoC4/PWM_Defcon.c **** 
 690:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 694:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM_Defcon.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM_Defcon.c ****     *
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 22


 697:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 699:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 700:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 701:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 710:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM_Defcon.c ****     uint8 PWM_Defcon_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 501              		.loc 1 712 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC4/PWM_Defcon.c ****         return (CY_GET_REG8(PWM_Defcon_STATUS_PTR));
 511              		.loc 1 713 0
 512 0004 024B     		ldr	r3, .L35
 513 0006 1B78     		ldrb	r3, [r3]
 514 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 515              		.loc 1 714 0
 516 000a 1800     		movs	r0, r3
 517 000c BD46     		mov	sp, r7
 518              		@ sp needed
 519 000e 80BD     		pop	{r7, pc}
 520              	.L36:
 521              		.align	2
 522              	.L35:
 523 0010 61000F40 		.word	1074724961
 524              		.cfi_endproc
 525              	.LFE10:
 526              		.size	PWM_Defcon_ReadStatusRegister, .-PWM_Defcon_ReadStatusRegister
 527              		.section	.text.PWM_Defcon_ReadControlRegister,"ax",%progbits
 528              		.align	2
 529              		.global	PWM_Defcon_ReadControlRegister
 530              		.code	16
 531              		.thumb_func
 532              		.type	PWM_Defcon_ReadControlRegister, %function
 533              	PWM_Defcon_ReadControlRegister:
 534              	.LFB11:
 715:Generated_Source\PSoC4/PWM_Defcon.c **** 
 716:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* (PWM_Defcon_UseStatus || PWM_Defcon_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM_Defcon.c **** 
 718:Generated_Source\PSoC4/PWM_Defcon.c **** 
 719:Generated_Source\PSoC4/PWM_Defcon.c **** #if (PWM_Defcon_UseControl)
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 23


 720:Generated_Source\PSoC4/PWM_Defcon.c **** 
 721:Generated_Source\PSoC4/PWM_Defcon.c **** 
 722:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadControlRegister
 724:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 726:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM_Defcon.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 730:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 732:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 733:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 734:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 736:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM_Defcon.c ****     uint8 PWM_Defcon_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 535              		.loc 1 738 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 8
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 7, -8
 542              		.cfi_offset 14, -4
 543 0002 82B0     		sub	sp, sp, #8
 544              		.cfi_def_cfa_offset 16
 545 0004 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC4/PWM_Defcon.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM_Defcon.c **** 
 741:Generated_Source\PSoC4/PWM_Defcon.c ****         result = CY_GET_REG8(PWM_Defcon_CONTROL_PTR);
 547              		.loc 1 741 0
 548 0006 054A     		ldr	r2, .L39
 549 0008 FB1D     		adds	r3, r7, #7
 550 000a 1278     		ldrb	r2, [r2]
 551 000c 1A70     		strb	r2, [r3]
 742:Generated_Source\PSoC4/PWM_Defcon.c ****         return (result);
 552              		.loc 1 742 0
 553 000e FB1D     		adds	r3, r7, #7
 554 0010 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 555              		.loc 1 743 0
 556 0012 1800     		movs	r0, r3
 557 0014 BD46     		mov	sp, r7
 558 0016 02B0     		add	sp, sp, #8
 559              		@ sp needed
 560 0018 80BD     		pop	{r7, pc}
 561              	.L40:
 562 001a C046     		.align	2
 563              	.L39:
 564 001c 71000F40 		.word	1074724977
 565              		.cfi_endproc
 566              	.LFE11:
 567              		.size	PWM_Defcon_ReadControlRegister, .-PWM_Defcon_ReadControlRegister
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 24


 568              		.section	.text.PWM_Defcon_WriteControlRegister,"ax",%progbits
 569              		.align	2
 570              		.global	PWM_Defcon_WriteControlRegister
 571              		.code	16
 572              		.thumb_func
 573              		.type	PWM_Defcon_WriteControlRegister, %function
 574              	PWM_Defcon_WriteControlRegister:
 575              	.LFB12:
 744:Generated_Source\PSoC4/PWM_Defcon.c **** 
 745:Generated_Source\PSoC4/PWM_Defcon.c **** 
 746:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_WriteControlRegister
 748:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 750:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM_Defcon.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 754:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM_Defcon.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 761:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 762:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 763:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 764:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM_Defcon.c ****     void PWM_Defcon_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 576              		.loc 1 766 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 82B0     		sub	sp, sp, #8
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 588 0006 0200     		movs	r2, r0
 589 0008 FB1D     		adds	r3, r7, #7
 590 000a 1A70     		strb	r2, [r3]
 767:Generated_Source\PSoC4/PWM_Defcon.c ****         CY_SET_REG8(PWM_Defcon_CONTROL_PTR, control);
 591              		.loc 1 767 0
 592 000c 034A     		ldr	r2, .L42
 593 000e FB1D     		adds	r3, r7, #7
 594 0010 1B78     		ldrb	r3, [r3]
 595 0012 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 596              		.loc 1 768 0
 597 0014 C046     		nop
 598 0016 BD46     		mov	sp, r7
 599 0018 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 25


 600              		@ sp needed
 601 001a 80BD     		pop	{r7, pc}
 602              	.L43:
 603              		.align	2
 604              	.L42:
 605 001c 71000F40 		.word	1074724977
 606              		.cfi_endproc
 607              	.LFE12:
 608              		.size	PWM_Defcon_WriteControlRegister, .-PWM_Defcon_WriteControlRegister
 609              		.section	.text.PWM_Defcon_ReadCapture,"ax",%progbits
 610              		.align	2
 611              		.global	PWM_Defcon_ReadCapture
 612              		.code	16
 613              		.thumb_func
 614              		.type	PWM_Defcon_ReadCapture, %function
 615              	PWM_Defcon_ReadCapture:
 616              	.LFB13:
 769:Generated_Source\PSoC4/PWM_Defcon.c **** 
 770:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* (PWM_Defcon_UseControl) */
 771:Generated_Source\PSoC4/PWM_Defcon.c **** 
 772:Generated_Source\PSoC4/PWM_Defcon.c **** 
 773:Generated_Source\PSoC4/PWM_Defcon.c **** #if (!PWM_Defcon_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM_Defcon.c **** 
 775:Generated_Source\PSoC4/PWM_Defcon.c **** 
 776:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadCapture
 778:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 780:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 783:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 785:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 786:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 787:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 789:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM_Defcon.c ****     uint16 PWM_Defcon_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 617              		.loc 1 791 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621 0000 80B5     		push	{r7, lr}
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 00AF     		add	r7, sp, #0
 626              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC4/PWM_Defcon.c ****         return (CY_GET_REG16(PWM_Defcon_CAPTURE_LSB_PTR));
 627              		.loc 1 792 0
 628 0004 024B     		ldr	r3, .L46
 629 0006 1B88     		ldrh	r3, [r3]
 630 0008 9BB2     		uxth	r3, r3
 793:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 631              		.loc 1 793 0
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 26


 632 000a 1800     		movs	r0, r3
 633 000c BD46     		mov	sp, r7
 634              		@ sp needed
 635 000e 80BD     		pop	{r7, pc}
 636              	.L47:
 637              		.align	2
 638              	.L46:
 639 0010 A0100F40 		.word	1074729120
 640              		.cfi_endproc
 641              	.LFE13:
 642              		.size	PWM_Defcon_ReadCapture, .-PWM_Defcon_ReadCapture
 643              		.section	.text.PWM_Defcon_ReadCompare,"ax",%progbits
 644              		.align	2
 645              		.global	PWM_Defcon_ReadCompare
 646              		.code	16
 647              		.thumb_func
 648              		.type	PWM_Defcon_ReadCompare, %function
 649              	PWM_Defcon_ReadCompare:
 650              	.LFB14:
 794:Generated_Source\PSoC4/PWM_Defcon.c **** 
 795:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* (!PWM_Defcon_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM_Defcon.c **** 
 797:Generated_Source\PSoC4/PWM_Defcon.c **** 
 798:Generated_Source\PSoC4/PWM_Defcon.c **** #if (PWM_Defcon_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM_Defcon.c **** 
 800:Generated_Source\PSoC4/PWM_Defcon.c **** 
 801:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadCompare
 803:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 805:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM_Defcon.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 809:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 811:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 812:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 813:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 815:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM_Defcon.c ****     uint16 PWM_Defcon_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 651              		.loc 1 817 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC4/PWM_Defcon.c ****         #if(PWM_Defcon_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM_Defcon.c ****             return ((uint16)CY_GET_REG16(PWM_Defcon_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM_Defcon.c ****         #else
 821:Generated_Source\PSoC4/PWM_Defcon.c ****             return (CY_GET_REG16(PWM_Defcon_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 27


 661              		.loc 1 821 0
 662 0004 024B     		ldr	r3, .L50
 663 0006 1B88     		ldrh	r3, [r3]
 664 0008 9BB2     		uxth	r3, r3
 822:Generated_Source\PSoC4/PWM_Defcon.c ****         #endif /* (PWM_Defcon_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 665              		.loc 1 823 0
 666 000a 1800     		movs	r0, r3
 667 000c BD46     		mov	sp, r7
 668              		@ sp needed
 669 000e 80BD     		pop	{r7, pc}
 670              	.L51:
 671              		.align	2
 672              	.L50:
 673 0010 40100F40 		.word	1074729024
 674              		.cfi_endproc
 675              	.LFE14:
 676              		.size	PWM_Defcon_ReadCompare, .-PWM_Defcon_ReadCompare
 677              		.section	.text.PWM_Defcon_ReadPeriod,"ax",%progbits
 678              		.align	2
 679              		.global	PWM_Defcon_ReadPeriod
 680              		.code	16
 681              		.thumb_func
 682              		.type	PWM_Defcon_ReadPeriod, %function
 683              	PWM_Defcon_ReadPeriod:
 684              	.LFB15:
 824:Generated_Source\PSoC4/PWM_Defcon.c **** 
 825:Generated_Source\PSoC4/PWM_Defcon.c **** #else
 826:Generated_Source\PSoC4/PWM_Defcon.c **** 
 827:Generated_Source\PSoC4/PWM_Defcon.c **** 
 828:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadCompare1
 830:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 832:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 835:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 837:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 838:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 839:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 841:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM_Defcon.c ****     uint16 PWM_Defcon_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 844:Generated_Source\PSoC4/PWM_Defcon.c ****         return (CY_GET_REG16(PWM_Defcon_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 846:Generated_Source\PSoC4/PWM_Defcon.c **** 
 847:Generated_Source\PSoC4/PWM_Defcon.c **** 
 848:Generated_Source\PSoC4/PWM_Defcon.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM_Defcon.c ****     * Function Name: PWM_Defcon_ReadCompare2
 850:Generated_Source\PSoC4/PWM_Defcon.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 852:Generated_Source\PSoC4/PWM_Defcon.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM_Defcon.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM_Defcon.c ****     *
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 28


 855:Generated_Source\PSoC4/PWM_Defcon.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM_Defcon.c ****     *  None
 857:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 858:Generated_Source\PSoC4/PWM_Defcon.c ****     * Return:
 859:Generated_Source\PSoC4/PWM_Defcon.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM_Defcon.c ****     *
 861:Generated_Source\PSoC4/PWM_Defcon.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM_Defcon.c ****     uint16 PWM_Defcon_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM_Defcon.c ****     {
 864:Generated_Source\PSoC4/PWM_Defcon.c ****         return (CY_GET_REG16(PWM_Defcon_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/PWM_Defcon.c ****     }
 866:Generated_Source\PSoC4/PWM_Defcon.c **** 
 867:Generated_Source\PSoC4/PWM_Defcon.c **** #endif /* (PWM_Defcon_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM_Defcon.c **** 
 869:Generated_Source\PSoC4/PWM_Defcon.c **** 
 870:Generated_Source\PSoC4/PWM_Defcon.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM_Defcon.c **** * Function Name: PWM_Defcon_ReadPeriod
 872:Generated_Source\PSoC4/PWM_Defcon.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM_Defcon.c **** *
 874:Generated_Source\PSoC4/PWM_Defcon.c **** * Summary:
 875:Generated_Source\PSoC4/PWM_Defcon.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM_Defcon.c **** *
 877:Generated_Source\PSoC4/PWM_Defcon.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM_Defcon.c **** *  None
 879:Generated_Source\PSoC4/PWM_Defcon.c **** *
 880:Generated_Source\PSoC4/PWM_Defcon.c **** * Return:
 881:Generated_Source\PSoC4/PWM_Defcon.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM_Defcon.c **** *
 883:Generated_Source\PSoC4/PWM_Defcon.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM_Defcon.c **** uint16 PWM_Defcon_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM_Defcon.c **** {
 685              		.loc 1 885 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689 0000 80B5     		push	{r7, lr}
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 00AF     		add	r7, sp, #0
 694              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC4/PWM_Defcon.c ****     #if(PWM_Defcon_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM_Defcon.c ****         return ((uint16)CY_GET_REG16(PWM_Defcon_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM_Defcon.c ****     #else
 889:Generated_Source\PSoC4/PWM_Defcon.c ****         return (CY_GET_REG16(PWM_Defcon_PERIOD_LSB_PTR));
 695              		.loc 1 889 0
 696 0004 024B     		ldr	r3, .L54
 697 0006 1B88     		ldrh	r3, [r3]
 698 0008 9BB2     		uxth	r3, r3
 890:Generated_Source\PSoC4/PWM_Defcon.c ****     #endif /* (PWM_Defcon_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM_Defcon.c **** }
 699              		.loc 1 891 0
 700 000a 1800     		movs	r0, r3
 701 000c BD46     		mov	sp, r7
 702              		@ sp needed
 703 000e 80BD     		pop	{r7, pc}
 704              	.L55:
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 29


 705              		.align	2
 706              	.L54:
 707 0010 80100F40 		.word	1074729088
 708              		.cfi_endproc
 709              	.LFE15:
 710              		.size	PWM_Defcon_ReadPeriod, .-PWM_Defcon_ReadPeriod
 711              		.text
 712              	.Letext0:
 713              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 714              		.section	.debug_info,"",%progbits
 715              	.Ldebug_info0:
 716 0000 A3020000 		.4byte	0x2a3
 717 0004 0400     		.2byte	0x4
 718 0006 00000000 		.4byte	.Ldebug_abbrev0
 719 000a 04       		.byte	0x4
 720 000b 01       		.uleb128 0x1
 721 000c 78010000 		.4byte	.LASF41
 722 0010 0C       		.byte	0xc
 723 0011 06020000 		.4byte	.LASF42
 724 0015 DF000000 		.4byte	.LASF43
 725 0019 00000000 		.4byte	.Ldebug_ranges0+0
 726 001d 00000000 		.4byte	0
 727 0021 00000000 		.4byte	.Ldebug_line0
 728 0025 02       		.uleb128 0x2
 729 0026 01       		.byte	0x1
 730 0027 06       		.byte	0x6
 731 0028 7F030000 		.4byte	.LASF0
 732 002c 02       		.uleb128 0x2
 733 002d 01       		.byte	0x1
 734 002e 08       		.byte	0x8
 735 002f 32010000 		.4byte	.LASF1
 736 0033 02       		.uleb128 0x2
 737 0034 02       		.byte	0x2
 738 0035 05       		.byte	0x5
 739 0036 2A030000 		.4byte	.LASF2
 740 003a 02       		.uleb128 0x2
 741 003b 02       		.byte	0x2
 742 003c 07       		.byte	0x7
 743 003d 82000000 		.4byte	.LASF3
 744 0041 02       		.uleb128 0x2
 745 0042 04       		.byte	0x4
 746 0043 05       		.byte	0x5
 747 0044 4B030000 		.4byte	.LASF4
 748 0048 02       		.uleb128 0x2
 749 0049 04       		.byte	0x4
 750 004a 07       		.byte	0x7
 751 004b 58010000 		.4byte	.LASF5
 752 004f 02       		.uleb128 0x2
 753 0050 08       		.byte	0x8
 754 0051 05       		.byte	0x5
 755 0052 0E030000 		.4byte	.LASF6
 756 0056 02       		.uleb128 0x2
 757 0057 08       		.byte	0x8
 758 0058 07       		.byte	0x7
 759 0059 83020000 		.4byte	.LASF7
 760 005d 03       		.uleb128 0x3
 761 005e 04       		.byte	0x4
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 30


 762 005f 05       		.byte	0x5
 763 0060 696E7400 		.ascii	"int\000"
 764 0064 02       		.uleb128 0x2
 765 0065 04       		.byte	0x4
 766 0066 07       		.byte	0x7
 767 0067 58020000 		.4byte	.LASF8
 768 006b 04       		.uleb128 0x4
 769 006c 6A010000 		.4byte	.LASF9
 770 0070 02       		.byte	0x2
 771 0071 D201     		.2byte	0x1d2
 772 0073 2C000000 		.4byte	0x2c
 773 0077 04       		.uleb128 0x4
 774 0078 41020000 		.4byte	.LASF10
 775 007c 02       		.byte	0x2
 776 007d D301     		.2byte	0x1d3
 777 007f 3A000000 		.4byte	0x3a
 778 0083 02       		.uleb128 0x2
 779 0084 04       		.byte	0x4
 780 0085 04       		.byte	0x4
 781 0086 24010000 		.4byte	.LASF11
 782 008a 02       		.uleb128 0x2
 783 008b 08       		.byte	0x8
 784 008c 04       		.byte	0x4
 785 008d C8000000 		.4byte	.LASF12
 786 0091 02       		.uleb128 0x2
 787 0092 01       		.byte	0x1
 788 0093 08       		.byte	0x8
 789 0094 54030000 		.4byte	.LASF13
 790 0098 04       		.uleb128 0x4
 791 0099 53010000 		.4byte	.LASF14
 792 009d 02       		.byte	0x2
 793 009e 7C02     		.2byte	0x27c
 794 00a0 A4000000 		.4byte	0xa4
 795 00a4 05       		.uleb128 0x5
 796 00a5 6B000000 		.4byte	0x6b
 797 00a9 04       		.uleb128 0x4
 798 00aa 00000000 		.4byte	.LASF15
 799 00ae 02       		.byte	0x2
 800 00af 7D02     		.2byte	0x27d
 801 00b1 B5000000 		.4byte	0xb5
 802 00b5 05       		.uleb128 0x5
 803 00b6 77000000 		.4byte	0x77
 804 00ba 02       		.uleb128 0x2
 805 00bb 08       		.byte	0x8
 806 00bc 04       		.byte	0x4
 807 00bd 73030000 		.4byte	.LASF16
 808 00c1 02       		.uleb128 0x2
 809 00c2 04       		.byte	0x4
 810 00c3 07       		.byte	0x7
 811 00c4 ED020000 		.4byte	.LASF17
 812 00c8 06       		.uleb128 0x6
 813 00c9 C0020000 		.4byte	.LASF20
 814 00cd 01       		.byte	0x1
 815 00ce 37       		.byte	0x37
 816 00cf 00000000 		.4byte	.LFB0
 817 00d3 24000000 		.4byte	.LFE0-.LFB0
 818 00d7 01       		.uleb128 0x1
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 31


 819 00d8 9C       		.byte	0x9c
 820 00d9 07       		.uleb128 0x7
 821 00da CF000000 		.4byte	.LASF23
 822 00de 01       		.byte	0x1
 823 00df 54       		.byte	0x54
 824 00e0 00000000 		.4byte	.LFB1
 825 00e4 98000000 		.4byte	.LFE1-.LFB1
 826 00e8 01       		.uleb128 0x1
 827 00e9 9C       		.byte	0x9c
 828 00ea 0B010000 		.4byte	0x10b
 829 00ee 08       		.uleb128 0x8
 830 00ef D1020000 		.4byte	.LASF18
 831 00f3 01       		.byte	0x1
 832 00f4 57       		.byte	0x57
 833 00f5 6B000000 		.4byte	0x6b
 834 00f9 02       		.uleb128 0x2
 835 00fa 91       		.byte	0x91
 836 00fb 6F       		.sleb128 -17
 837 00fc 08       		.uleb128 0x8
 838 00fd 59030000 		.4byte	.LASF19
 839 0101 01       		.byte	0x1
 840 0102 5D       		.byte	0x5d
 841 0103 6B000000 		.4byte	0x6b
 842 0107 02       		.uleb128 0x2
 843 0108 91       		.byte	0x91
 844 0109 6E       		.sleb128 -18
 845 010a 00       		.byte	0
 846 010b 09       		.uleb128 0x9
 847 010c 54000000 		.4byte	.LASF21
 848 0110 01       		.byte	0x1
 849 0111 C7       		.byte	0xc7
 850 0112 00000000 		.4byte	.LFB2
 851 0116 20000000 		.4byte	.LFE2-.LFB2
 852 011a 01       		.uleb128 0x1
 853 011b 9C       		.byte	0x9c
 854 011c 09       		.uleb128 0x9
 855 011d 48020000 		.4byte	.LASF22
 856 0121 01       		.byte	0x1
 857 0122 E9       		.byte	0xe9
 858 0123 00000000 		.4byte	.LFB3
 859 0127 20000000 		.4byte	.LFE3-.LFB3
 860 012b 01       		.uleb128 0x1
 861 012c 9C       		.byte	0x9c
 862 012d 0A       		.uleb128 0xa
 863 012e 3C000000 		.4byte	.LASF24
 864 0132 01       		.byte	0x1
 865 0133 9301     		.2byte	0x193
 866 0135 00000000 		.4byte	.LFB4
 867 0139 20000000 		.4byte	.LFE4-.LFB4
 868 013d 01       		.uleb128 0x1
 869 013e 9C       		.byte	0x9c
 870 013f 53010000 		.4byte	0x153
 871 0143 0B       		.uleb128 0xb
 872 0144 2A010000 		.4byte	.LASF27
 873 0148 01       		.byte	0x1
 874 0149 9301     		.2byte	0x193
 875 014b 77000000 		.4byte	0x77
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 32


 876 014f 02       		.uleb128 0x2
 877 0150 91       		.byte	0x91
 878 0151 76       		.sleb128 -10
 879 0152 00       		.byte	0
 880 0153 0C       		.uleb128 0xc
 881 0154 34030000 		.4byte	.LASF33
 882 0158 01       		.byte	0x1
 883 0159 A901     		.2byte	0x1a9
 884 015b 77000000 		.4byte	0x77
 885 015f 00000000 		.4byte	.LFB5
 886 0163 1C000000 		.4byte	.LFE5-.LFB5
 887 0167 01       		.uleb128 0x1
 888 0168 9C       		.byte	0x9c
 889 0169 0D       		.uleb128 0xd
 890 016a 66000000 		.4byte	.LASF25
 891 016e 01       		.byte	0x1
 892 016f C501     		.2byte	0x1c5
 893 0171 00000000 		.4byte	.LFB6
 894 0175 1E000000 		.4byte	.LFE6-.LFB6
 895 0179 01       		.uleb128 0x1
 896 017a 9C       		.byte	0x9c
 897 017b 0A       		.uleb128 0xa
 898 017c 95000000 		.4byte	.LASF26
 899 0180 01       		.byte	0x1
 900 0181 E201     		.2byte	0x1e2
 901 0183 00000000 		.4byte	.LFB7
 902 0187 20000000 		.4byte	.LFE7-.LFB7
 903 018b 01       		.uleb128 0x1
 904 018c 9C       		.byte	0x9c
 905 018d A1010000 		.4byte	0x1a1
 906 0191 0B       		.uleb128 0xb
 907 0192 7B000000 		.4byte	.LASF28
 908 0196 01       		.byte	0x1
 909 0197 E201     		.2byte	0x1e2
 910 0199 77000000 		.4byte	0x77
 911 019d 02       		.uleb128 0x2
 912 019e 91       		.byte	0x91
 913 019f 76       		.sleb128 -10
 914 01a0 00       		.byte	0
 915 01a1 0A       		.uleb128 0xa
 916 01a2 F6020000 		.4byte	.LASF29
 917 01a6 01       		.byte	0x1
 918 01a7 0402     		.2byte	0x204
 919 01a9 00000000 		.4byte	.LFB8
 920 01ad 20000000 		.4byte	.LFE8-.LFB8
 921 01b1 01       		.uleb128 0x1
 922 01b2 9C       		.byte	0x9c
 923 01b3 C7010000 		.4byte	0x1c7
 924 01b7 0B       		.uleb128 0xb
 925 01b8 8B030000 		.4byte	.LASF30
 926 01bc 01       		.byte	0x1
 927 01bd 0402     		.2byte	0x204
 928 01bf 77000000 		.4byte	0x77
 929 01c3 02       		.uleb128 0x2
 930 01c4 91       		.byte	0x91
 931 01c5 76       		.sleb128 -10
 932 01c6 00       		.byte	0
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 33


 933 01c7 0A       		.uleb128 0xa
 934 01c8 AC000000 		.4byte	.LASF31
 935 01cc 01       		.byte	0x1
 936 01cd AC02     		.2byte	0x2ac
 937 01cf 00000000 		.4byte	.LFB9
 938 01d3 20000000 		.4byte	.LFE9-.LFB9
 939 01d7 01       		.uleb128 0x1
 940 01d8 9C       		.byte	0x9c
 941 01d9 ED010000 		.4byte	0x1ed
 942 01dd 0B       		.uleb128 0xb
 943 01de 1C030000 		.4byte	.LASF32
 944 01e2 01       		.byte	0x1
 945 01e3 AC02     		.2byte	0x2ac
 946 01e5 6B000000 		.4byte	0x6b
 947 01e9 02       		.uleb128 0x2
 948 01ea 91       		.byte	0x91
 949 01eb 77       		.sleb128 -9
 950 01ec 00       		.byte	0
 951 01ed 0C       		.uleb128 0xc
 952 01ee 65020000 		.4byte	.LASF34
 953 01f2 01       		.byte	0x1
 954 01f3 C702     		.2byte	0x2c7
 955 01f5 6B000000 		.4byte	0x6b
 956 01f9 00000000 		.4byte	.LFB10
 957 01fd 14000000 		.4byte	.LFE10-.LFB10
 958 0201 01       		.uleb128 0x1
 959 0202 9C       		.byte	0x9c
 960 0203 0E       		.uleb128 0xe
 961 0204 A1020000 		.4byte	.LASF44
 962 0208 01       		.byte	0x1
 963 0209 E102     		.2byte	0x2e1
 964 020b 6B000000 		.4byte	0x6b
 965 020f 00000000 		.4byte	.LFB11
 966 0213 20000000 		.4byte	.LFE11-.LFB11
 967 0217 01       		.uleb128 0x1
 968 0218 9C       		.byte	0x9c
 969 0219 2D020000 		.4byte	0x22d
 970 021d 0F       		.uleb128 0xf
 971 021e 9A020000 		.4byte	.LASF35
 972 0222 01       		.byte	0x1
 973 0223 E302     		.2byte	0x2e3
 974 0225 6B000000 		.4byte	0x6b
 975 0229 02       		.uleb128 0x2
 976 022a 91       		.byte	0x91
 977 022b 77       		.sleb128 -9
 978 022c 00       		.byte	0
 979 022d 0A       		.uleb128 0xa
 980 022e 06000000 		.4byte	.LASF36
 981 0232 01       		.byte	0x1
 982 0233 FD02     		.2byte	0x2fd
 983 0235 00000000 		.4byte	.LFB12
 984 0239 20000000 		.4byte	.LFE12-.LFB12
 985 023d 01       		.uleb128 0x1
 986 023e 9C       		.byte	0x9c
 987 023f 53020000 		.4byte	0x253
 988 0243 0B       		.uleb128 0xb
 989 0244 70010000 		.4byte	.LASF37
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 34


 990 0248 01       		.byte	0x1
 991 0249 FD02     		.2byte	0x2fd
 992 024b 6B000000 		.4byte	0x6b
 993 024f 02       		.uleb128 0x2
 994 0250 91       		.byte	0x91
 995 0251 77       		.sleb128 -9
 996 0252 00       		.byte	0
 997 0253 0C       		.uleb128 0xc
 998 0254 D6020000 		.4byte	.LASF38
 999 0258 01       		.byte	0x1
 1000 0259 1603     		.2byte	0x316
 1001 025b 77000000 		.4byte	0x77
 1002 025f 00000000 		.4byte	.LFB13
 1003 0263 14000000 		.4byte	.LFE13-.LFB13
 1004 0267 01       		.uleb128 0x1
 1005 0268 9C       		.byte	0x9c
 1006 0269 0C       		.uleb128 0xc
 1007 026a 2A020000 		.4byte	.LASF39
 1008 026e 01       		.byte	0x1
 1009 026f 3003     		.2byte	0x330
 1010 0271 77000000 		.4byte	0x77
 1011 0275 00000000 		.4byte	.LFB14
 1012 0279 14000000 		.4byte	.LFE14-.LFB14
 1013 027d 01       		.uleb128 0x1
 1014 027e 9C       		.byte	0x9c
 1015 027f 0C       		.uleb128 0xc
 1016 0280 26000000 		.4byte	.LASF40
 1017 0284 01       		.byte	0x1
 1018 0285 7403     		.2byte	0x374
 1019 0287 77000000 		.4byte	0x77
 1020 028b 00000000 		.4byte	.LFB15
 1021 028f 14000000 		.4byte	.LFE15-.LFB15
 1022 0293 01       		.uleb128 0x1
 1023 0294 9C       		.byte	0x9c
 1024 0295 10       		.uleb128 0x10
 1025 0296 40010000 		.4byte	.LASF45
 1026 029a 01       		.byte	0x1
 1027 029b 20       		.byte	0x20
 1028 029c 6B000000 		.4byte	0x6b
 1029 02a0 05       		.uleb128 0x5
 1030 02a1 03       		.byte	0x3
 1031 02a2 00000000 		.4byte	PWM_Defcon_initVar
 1032 02a6 00       		.byte	0
 1033              		.section	.debug_abbrev,"",%progbits
 1034              	.Ldebug_abbrev0:
 1035 0000 01       		.uleb128 0x1
 1036 0001 11       		.uleb128 0x11
 1037 0002 01       		.byte	0x1
 1038 0003 25       		.uleb128 0x25
 1039 0004 0E       		.uleb128 0xe
 1040 0005 13       		.uleb128 0x13
 1041 0006 0B       		.uleb128 0xb
 1042 0007 03       		.uleb128 0x3
 1043 0008 0E       		.uleb128 0xe
 1044 0009 1B       		.uleb128 0x1b
 1045 000a 0E       		.uleb128 0xe
 1046 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 35


 1047 000c 17       		.uleb128 0x17
 1048 000d 11       		.uleb128 0x11
 1049 000e 01       		.uleb128 0x1
 1050 000f 10       		.uleb128 0x10
 1051 0010 17       		.uleb128 0x17
 1052 0011 00       		.byte	0
 1053 0012 00       		.byte	0
 1054 0013 02       		.uleb128 0x2
 1055 0014 24       		.uleb128 0x24
 1056 0015 00       		.byte	0
 1057 0016 0B       		.uleb128 0xb
 1058 0017 0B       		.uleb128 0xb
 1059 0018 3E       		.uleb128 0x3e
 1060 0019 0B       		.uleb128 0xb
 1061 001a 03       		.uleb128 0x3
 1062 001b 0E       		.uleb128 0xe
 1063 001c 00       		.byte	0
 1064 001d 00       		.byte	0
 1065 001e 03       		.uleb128 0x3
 1066 001f 24       		.uleb128 0x24
 1067 0020 00       		.byte	0
 1068 0021 0B       		.uleb128 0xb
 1069 0022 0B       		.uleb128 0xb
 1070 0023 3E       		.uleb128 0x3e
 1071 0024 0B       		.uleb128 0xb
 1072 0025 03       		.uleb128 0x3
 1073 0026 08       		.uleb128 0x8
 1074 0027 00       		.byte	0
 1075 0028 00       		.byte	0
 1076 0029 04       		.uleb128 0x4
 1077 002a 16       		.uleb128 0x16
 1078 002b 00       		.byte	0
 1079 002c 03       		.uleb128 0x3
 1080 002d 0E       		.uleb128 0xe
 1081 002e 3A       		.uleb128 0x3a
 1082 002f 0B       		.uleb128 0xb
 1083 0030 3B       		.uleb128 0x3b
 1084 0031 05       		.uleb128 0x5
 1085 0032 49       		.uleb128 0x49
 1086 0033 13       		.uleb128 0x13
 1087 0034 00       		.byte	0
 1088 0035 00       		.byte	0
 1089 0036 05       		.uleb128 0x5
 1090 0037 35       		.uleb128 0x35
 1091 0038 00       		.byte	0
 1092 0039 49       		.uleb128 0x49
 1093 003a 13       		.uleb128 0x13
 1094 003b 00       		.byte	0
 1095 003c 00       		.byte	0
 1096 003d 06       		.uleb128 0x6
 1097 003e 2E       		.uleb128 0x2e
 1098 003f 00       		.byte	0
 1099 0040 3F       		.uleb128 0x3f
 1100 0041 19       		.uleb128 0x19
 1101 0042 03       		.uleb128 0x3
 1102 0043 0E       		.uleb128 0xe
 1103 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 36


 1104 0045 0B       		.uleb128 0xb
 1105 0046 3B       		.uleb128 0x3b
 1106 0047 0B       		.uleb128 0xb
 1107 0048 27       		.uleb128 0x27
 1108 0049 19       		.uleb128 0x19
 1109 004a 11       		.uleb128 0x11
 1110 004b 01       		.uleb128 0x1
 1111 004c 12       		.uleb128 0x12
 1112 004d 06       		.uleb128 0x6
 1113 004e 40       		.uleb128 0x40
 1114 004f 18       		.uleb128 0x18
 1115 0050 9642     		.uleb128 0x2116
 1116 0052 19       		.uleb128 0x19
 1117 0053 00       		.byte	0
 1118 0054 00       		.byte	0
 1119 0055 07       		.uleb128 0x7
 1120 0056 2E       		.uleb128 0x2e
 1121 0057 01       		.byte	0x1
 1122 0058 3F       		.uleb128 0x3f
 1123 0059 19       		.uleb128 0x19
 1124 005a 03       		.uleb128 0x3
 1125 005b 0E       		.uleb128 0xe
 1126 005c 3A       		.uleb128 0x3a
 1127 005d 0B       		.uleb128 0xb
 1128 005e 3B       		.uleb128 0x3b
 1129 005f 0B       		.uleb128 0xb
 1130 0060 27       		.uleb128 0x27
 1131 0061 19       		.uleb128 0x19
 1132 0062 11       		.uleb128 0x11
 1133 0063 01       		.uleb128 0x1
 1134 0064 12       		.uleb128 0x12
 1135 0065 06       		.uleb128 0x6
 1136 0066 40       		.uleb128 0x40
 1137 0067 18       		.uleb128 0x18
 1138 0068 9642     		.uleb128 0x2116
 1139 006a 19       		.uleb128 0x19
 1140 006b 01       		.uleb128 0x1
 1141 006c 13       		.uleb128 0x13
 1142 006d 00       		.byte	0
 1143 006e 00       		.byte	0
 1144 006f 08       		.uleb128 0x8
 1145 0070 34       		.uleb128 0x34
 1146 0071 00       		.byte	0
 1147 0072 03       		.uleb128 0x3
 1148 0073 0E       		.uleb128 0xe
 1149 0074 3A       		.uleb128 0x3a
 1150 0075 0B       		.uleb128 0xb
 1151 0076 3B       		.uleb128 0x3b
 1152 0077 0B       		.uleb128 0xb
 1153 0078 49       		.uleb128 0x49
 1154 0079 13       		.uleb128 0x13
 1155 007a 02       		.uleb128 0x2
 1156 007b 18       		.uleb128 0x18
 1157 007c 00       		.byte	0
 1158 007d 00       		.byte	0
 1159 007e 09       		.uleb128 0x9
 1160 007f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 37


 1161 0080 00       		.byte	0
 1162 0081 3F       		.uleb128 0x3f
 1163 0082 19       		.uleb128 0x19
 1164 0083 03       		.uleb128 0x3
 1165 0084 0E       		.uleb128 0xe
 1166 0085 3A       		.uleb128 0x3a
 1167 0086 0B       		.uleb128 0xb
 1168 0087 3B       		.uleb128 0x3b
 1169 0088 0B       		.uleb128 0xb
 1170 0089 27       		.uleb128 0x27
 1171 008a 19       		.uleb128 0x19
 1172 008b 11       		.uleb128 0x11
 1173 008c 01       		.uleb128 0x1
 1174 008d 12       		.uleb128 0x12
 1175 008e 06       		.uleb128 0x6
 1176 008f 40       		.uleb128 0x40
 1177 0090 18       		.uleb128 0x18
 1178 0091 9742     		.uleb128 0x2117
 1179 0093 19       		.uleb128 0x19
 1180 0094 00       		.byte	0
 1181 0095 00       		.byte	0
 1182 0096 0A       		.uleb128 0xa
 1183 0097 2E       		.uleb128 0x2e
 1184 0098 01       		.byte	0x1
 1185 0099 3F       		.uleb128 0x3f
 1186 009a 19       		.uleb128 0x19
 1187 009b 03       		.uleb128 0x3
 1188 009c 0E       		.uleb128 0xe
 1189 009d 3A       		.uleb128 0x3a
 1190 009e 0B       		.uleb128 0xb
 1191 009f 3B       		.uleb128 0x3b
 1192 00a0 05       		.uleb128 0x5
 1193 00a1 27       		.uleb128 0x27
 1194 00a2 19       		.uleb128 0x19
 1195 00a3 11       		.uleb128 0x11
 1196 00a4 01       		.uleb128 0x1
 1197 00a5 12       		.uleb128 0x12
 1198 00a6 06       		.uleb128 0x6
 1199 00a7 40       		.uleb128 0x40
 1200 00a8 18       		.uleb128 0x18
 1201 00a9 9742     		.uleb128 0x2117
 1202 00ab 19       		.uleb128 0x19
 1203 00ac 01       		.uleb128 0x1
 1204 00ad 13       		.uleb128 0x13
 1205 00ae 00       		.byte	0
 1206 00af 00       		.byte	0
 1207 00b0 0B       		.uleb128 0xb
 1208 00b1 05       		.uleb128 0x5
 1209 00b2 00       		.byte	0
 1210 00b3 03       		.uleb128 0x3
 1211 00b4 0E       		.uleb128 0xe
 1212 00b5 3A       		.uleb128 0x3a
 1213 00b6 0B       		.uleb128 0xb
 1214 00b7 3B       		.uleb128 0x3b
 1215 00b8 05       		.uleb128 0x5
 1216 00b9 49       		.uleb128 0x49
 1217 00ba 13       		.uleb128 0x13
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 38


 1218 00bb 02       		.uleb128 0x2
 1219 00bc 18       		.uleb128 0x18
 1220 00bd 00       		.byte	0
 1221 00be 00       		.byte	0
 1222 00bf 0C       		.uleb128 0xc
 1223 00c0 2E       		.uleb128 0x2e
 1224 00c1 00       		.byte	0
 1225 00c2 3F       		.uleb128 0x3f
 1226 00c3 19       		.uleb128 0x19
 1227 00c4 03       		.uleb128 0x3
 1228 00c5 0E       		.uleb128 0xe
 1229 00c6 3A       		.uleb128 0x3a
 1230 00c7 0B       		.uleb128 0xb
 1231 00c8 3B       		.uleb128 0x3b
 1232 00c9 05       		.uleb128 0x5
 1233 00ca 27       		.uleb128 0x27
 1234 00cb 19       		.uleb128 0x19
 1235 00cc 49       		.uleb128 0x49
 1236 00cd 13       		.uleb128 0x13
 1237 00ce 11       		.uleb128 0x11
 1238 00cf 01       		.uleb128 0x1
 1239 00d0 12       		.uleb128 0x12
 1240 00d1 06       		.uleb128 0x6
 1241 00d2 40       		.uleb128 0x40
 1242 00d3 18       		.uleb128 0x18
 1243 00d4 9742     		.uleb128 0x2117
 1244 00d6 19       		.uleb128 0x19
 1245 00d7 00       		.byte	0
 1246 00d8 00       		.byte	0
 1247 00d9 0D       		.uleb128 0xd
 1248 00da 2E       		.uleb128 0x2e
 1249 00db 00       		.byte	0
 1250 00dc 3F       		.uleb128 0x3f
 1251 00dd 19       		.uleb128 0x19
 1252 00de 03       		.uleb128 0x3
 1253 00df 0E       		.uleb128 0xe
 1254 00e0 3A       		.uleb128 0x3a
 1255 00e1 0B       		.uleb128 0xb
 1256 00e2 3B       		.uleb128 0x3b
 1257 00e3 05       		.uleb128 0x5
 1258 00e4 27       		.uleb128 0x27
 1259 00e5 19       		.uleb128 0x19
 1260 00e6 11       		.uleb128 0x11
 1261 00e7 01       		.uleb128 0x1
 1262 00e8 12       		.uleb128 0x12
 1263 00e9 06       		.uleb128 0x6
 1264 00ea 40       		.uleb128 0x40
 1265 00eb 18       		.uleb128 0x18
 1266 00ec 9642     		.uleb128 0x2116
 1267 00ee 19       		.uleb128 0x19
 1268 00ef 00       		.byte	0
 1269 00f0 00       		.byte	0
 1270 00f1 0E       		.uleb128 0xe
 1271 00f2 2E       		.uleb128 0x2e
 1272 00f3 01       		.byte	0x1
 1273 00f4 3F       		.uleb128 0x3f
 1274 00f5 19       		.uleb128 0x19
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 39


 1275 00f6 03       		.uleb128 0x3
 1276 00f7 0E       		.uleb128 0xe
 1277 00f8 3A       		.uleb128 0x3a
 1278 00f9 0B       		.uleb128 0xb
 1279 00fa 3B       		.uleb128 0x3b
 1280 00fb 05       		.uleb128 0x5
 1281 00fc 27       		.uleb128 0x27
 1282 00fd 19       		.uleb128 0x19
 1283 00fe 49       		.uleb128 0x49
 1284 00ff 13       		.uleb128 0x13
 1285 0100 11       		.uleb128 0x11
 1286 0101 01       		.uleb128 0x1
 1287 0102 12       		.uleb128 0x12
 1288 0103 06       		.uleb128 0x6
 1289 0104 40       		.uleb128 0x40
 1290 0105 18       		.uleb128 0x18
 1291 0106 9742     		.uleb128 0x2117
 1292 0108 19       		.uleb128 0x19
 1293 0109 01       		.uleb128 0x1
 1294 010a 13       		.uleb128 0x13
 1295 010b 00       		.byte	0
 1296 010c 00       		.byte	0
 1297 010d 0F       		.uleb128 0xf
 1298 010e 34       		.uleb128 0x34
 1299 010f 00       		.byte	0
 1300 0110 03       		.uleb128 0x3
 1301 0111 0E       		.uleb128 0xe
 1302 0112 3A       		.uleb128 0x3a
 1303 0113 0B       		.uleb128 0xb
 1304 0114 3B       		.uleb128 0x3b
 1305 0115 05       		.uleb128 0x5
 1306 0116 49       		.uleb128 0x49
 1307 0117 13       		.uleb128 0x13
 1308 0118 02       		.uleb128 0x2
 1309 0119 18       		.uleb128 0x18
 1310 011a 00       		.byte	0
 1311 011b 00       		.byte	0
 1312 011c 10       		.uleb128 0x10
 1313 011d 34       		.uleb128 0x34
 1314 011e 00       		.byte	0
 1315 011f 03       		.uleb128 0x3
 1316 0120 0E       		.uleb128 0xe
 1317 0121 3A       		.uleb128 0x3a
 1318 0122 0B       		.uleb128 0xb
 1319 0123 3B       		.uleb128 0x3b
 1320 0124 0B       		.uleb128 0xb
 1321 0125 49       		.uleb128 0x49
 1322 0126 13       		.uleb128 0x13
 1323 0127 3F       		.uleb128 0x3f
 1324 0128 19       		.uleb128 0x19
 1325 0129 02       		.uleb128 0x2
 1326 012a 18       		.uleb128 0x18
 1327 012b 00       		.byte	0
 1328 012c 00       		.byte	0
 1329 012d 00       		.byte	0
 1330              		.section	.debug_aranges,"",%progbits
 1331 0000 94000000 		.4byte	0x94
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 40


 1332 0004 0200     		.2byte	0x2
 1333 0006 00000000 		.4byte	.Ldebug_info0
 1334 000a 04       		.byte	0x4
 1335 000b 00       		.byte	0
 1336 000c 0000     		.2byte	0
 1337 000e 0000     		.2byte	0
 1338 0010 00000000 		.4byte	.LFB0
 1339 0014 24000000 		.4byte	.LFE0-.LFB0
 1340 0018 00000000 		.4byte	.LFB1
 1341 001c 98000000 		.4byte	.LFE1-.LFB1
 1342 0020 00000000 		.4byte	.LFB2
 1343 0024 20000000 		.4byte	.LFE2-.LFB2
 1344 0028 00000000 		.4byte	.LFB3
 1345 002c 20000000 		.4byte	.LFE3-.LFB3
 1346 0030 00000000 		.4byte	.LFB4
 1347 0034 20000000 		.4byte	.LFE4-.LFB4
 1348 0038 00000000 		.4byte	.LFB5
 1349 003c 1C000000 		.4byte	.LFE5-.LFB5
 1350 0040 00000000 		.4byte	.LFB6
 1351 0044 1E000000 		.4byte	.LFE6-.LFB6
 1352 0048 00000000 		.4byte	.LFB7
 1353 004c 20000000 		.4byte	.LFE7-.LFB7
 1354 0050 00000000 		.4byte	.LFB8
 1355 0054 20000000 		.4byte	.LFE8-.LFB8
 1356 0058 00000000 		.4byte	.LFB9
 1357 005c 20000000 		.4byte	.LFE9-.LFB9
 1358 0060 00000000 		.4byte	.LFB10
 1359 0064 14000000 		.4byte	.LFE10-.LFB10
 1360 0068 00000000 		.4byte	.LFB11
 1361 006c 20000000 		.4byte	.LFE11-.LFB11
 1362 0070 00000000 		.4byte	.LFB12
 1363 0074 20000000 		.4byte	.LFE12-.LFB12
 1364 0078 00000000 		.4byte	.LFB13
 1365 007c 14000000 		.4byte	.LFE13-.LFB13
 1366 0080 00000000 		.4byte	.LFB14
 1367 0084 14000000 		.4byte	.LFE14-.LFB14
 1368 0088 00000000 		.4byte	.LFB15
 1369 008c 14000000 		.4byte	.LFE15-.LFB15
 1370 0090 00000000 		.4byte	0
 1371 0094 00000000 		.4byte	0
 1372              		.section	.debug_ranges,"",%progbits
 1373              	.Ldebug_ranges0:
 1374 0000 00000000 		.4byte	.LFB0
 1375 0004 24000000 		.4byte	.LFE0
 1376 0008 00000000 		.4byte	.LFB1
 1377 000c 98000000 		.4byte	.LFE1
 1378 0010 00000000 		.4byte	.LFB2
 1379 0014 20000000 		.4byte	.LFE2
 1380 0018 00000000 		.4byte	.LFB3
 1381 001c 20000000 		.4byte	.LFE3
 1382 0020 00000000 		.4byte	.LFB4
 1383 0024 20000000 		.4byte	.LFE4
 1384 0028 00000000 		.4byte	.LFB5
 1385 002c 1C000000 		.4byte	.LFE5
 1386 0030 00000000 		.4byte	.LFB6
 1387 0034 1E000000 		.4byte	.LFE6
 1388 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 41


 1389 003c 20000000 		.4byte	.LFE7
 1390 0040 00000000 		.4byte	.LFB8
 1391 0044 20000000 		.4byte	.LFE8
 1392 0048 00000000 		.4byte	.LFB9
 1393 004c 20000000 		.4byte	.LFE9
 1394 0050 00000000 		.4byte	.LFB10
 1395 0054 14000000 		.4byte	.LFE10
 1396 0058 00000000 		.4byte	.LFB11
 1397 005c 20000000 		.4byte	.LFE11
 1398 0060 00000000 		.4byte	.LFB12
 1399 0064 20000000 		.4byte	.LFE12
 1400 0068 00000000 		.4byte	.LFB13
 1401 006c 14000000 		.4byte	.LFE13
 1402 0070 00000000 		.4byte	.LFB14
 1403 0074 14000000 		.4byte	.LFE14
 1404 0078 00000000 		.4byte	.LFB15
 1405 007c 14000000 		.4byte	.LFE15
 1406 0080 00000000 		.4byte	0
 1407 0084 00000000 		.4byte	0
 1408              		.section	.debug_line,"",%progbits
 1409              	.Ldebug_line0:
 1410 0000 8A010000 		.section	.debug_str,"MS",%progbits,1
 1410      02004700 
 1410      00000201 
 1410      FB0E0D00 
 1410      01010101 
 1411              	.LASF15:
 1412 0000 72656731 		.ascii	"reg16\000"
 1412      3600
 1413              	.LASF36:
 1414 0006 50574D5F 		.ascii	"PWM_Defcon_WriteControlRegister\000"
 1414      44656663 
 1414      6F6E5F57 
 1414      72697465 
 1414      436F6E74 
 1415              	.LASF40:
 1416 0026 50574D5F 		.ascii	"PWM_Defcon_ReadPeriod\000"
 1416      44656663 
 1416      6F6E5F52 
 1416      65616450 
 1416      6572696F 
 1417              	.LASF24:
 1418 003c 50574D5F 		.ascii	"PWM_Defcon_WriteCounter\000"
 1418      44656663 
 1418      6F6E5F57 
 1418      72697465 
 1418      436F756E 
 1419              	.LASF21:
 1420 0054 50574D5F 		.ascii	"PWM_Defcon_Enable\000"
 1420      44656663 
 1420      6F6E5F45 
 1420      6E61626C 
 1420      6500
 1421              	.LASF25:
 1422 0066 50574D5F 		.ascii	"PWM_Defcon_ClearFIFO\000"
 1422      44656663 
 1422      6F6E5F43 
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 42


 1422      6C656172 
 1422      4649464F 
 1423              	.LASF28:
 1424 007b 70657269 		.ascii	"period\000"
 1424      6F6400
 1425              	.LASF3:
 1426 0082 73686F72 		.ascii	"short unsigned int\000"
 1426      7420756E 
 1426      7369676E 
 1426      65642069 
 1426      6E7400
 1427              	.LASF26:
 1428 0095 50574D5F 		.ascii	"PWM_Defcon_WritePeriod\000"
 1428      44656663 
 1428      6F6E5F57 
 1428      72697465 
 1428      50657269 
 1429              	.LASF31:
 1430 00ac 50574D5F 		.ascii	"PWM_Defcon_SetInterruptMode\000"
 1430      44656663 
 1430      6F6E5F53 
 1430      6574496E 
 1430      74657272 
 1431              	.LASF12:
 1432 00c8 646F7562 		.ascii	"double\000"
 1432      6C6500
 1433              	.LASF23:
 1434 00cf 50574D5F 		.ascii	"PWM_Defcon_Init\000"
 1434      44656663 
 1434      6F6E5F49 
 1434      6E697400 
 1435              	.LASF43:
 1436 00df 433A5C55 		.ascii	"C:\\Users\\ryan\\Documents\\PSoC Creator\\Defcon_Ba"
 1436      73657273 
 1436      5C727961 
 1436      6E5C446F 
 1436      63756D65 
 1437 010d 6467655C 		.ascii	"dge\\Defcon_Badge.cydsn\000"
 1437      44656663 
 1437      6F6E5F42 
 1437      61646765 
 1437      2E637964 
 1438              	.LASF11:
 1439 0124 666C6F61 		.ascii	"float\000"
 1439      7400
 1440              	.LASF27:
 1441 012a 636F756E 		.ascii	"counter\000"
 1441      74657200 
 1442              	.LASF1:
 1443 0132 756E7369 		.ascii	"unsigned char\000"
 1443      676E6564 
 1443      20636861 
 1443      7200
 1444              	.LASF45:
 1445 0140 50574D5F 		.ascii	"PWM_Defcon_initVar\000"
 1445      44656663 
 1445      6F6E5F69 
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 43


 1445      6E697456 
 1445      617200
 1446              	.LASF14:
 1447 0153 72656738 		.ascii	"reg8\000"
 1447      00
 1448              	.LASF5:
 1449 0158 6C6F6E67 		.ascii	"long unsigned int\000"
 1449      20756E73 
 1449      69676E65 
 1449      6420696E 
 1449      7400
 1450              	.LASF9:
 1451 016a 75696E74 		.ascii	"uint8\000"
 1451      3800
 1452              	.LASF37:
 1453 0170 636F6E74 		.ascii	"control\000"
 1453      726F6C00 
 1454              	.LASF41:
 1455 0178 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1455      43313120 
 1455      352E342E 
 1455      31203230 
 1455      31363036 
 1456 01ab 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1456      20726576 
 1456      6973696F 
 1456      6E203233 
 1456      37373135 
 1457 01de 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1457      66756E63 
 1457      74696F6E 
 1457      2D736563 
 1457      74696F6E 
 1458              	.LASF42:
 1459 0206 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_Defcon.c\000"
 1459      72617465 
 1459      645F536F 
 1459      75726365 
 1459      5C50536F 
 1460              	.LASF39:
 1461 022a 50574D5F 		.ascii	"PWM_Defcon_ReadCompare\000"
 1461      44656663 
 1461      6F6E5F52 
 1461      65616443 
 1461      6F6D7061 
 1462              	.LASF10:
 1463 0241 75696E74 		.ascii	"uint16\000"
 1463      313600
 1464              	.LASF22:
 1465 0248 50574D5F 		.ascii	"PWM_Defcon_Stop\000"
 1465      44656663 
 1465      6F6E5F53 
 1465      746F7000 
 1466              	.LASF8:
 1467 0258 756E7369 		.ascii	"unsigned int\000"
 1467      676E6564 
 1467      20696E74 
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 44


 1467      00
 1468              	.LASF34:
 1469 0265 50574D5F 		.ascii	"PWM_Defcon_ReadStatusRegister\000"
 1469      44656663 
 1469      6F6E5F52 
 1469      65616453 
 1469      74617475 
 1470              	.LASF7:
 1471 0283 6C6F6E67 		.ascii	"long long unsigned int\000"
 1471      206C6F6E 
 1471      6720756E 
 1471      7369676E 
 1471      65642069 
 1472              	.LASF35:
 1473 029a 72657375 		.ascii	"result\000"
 1473      6C7400
 1474              	.LASF44:
 1475 02a1 50574D5F 		.ascii	"PWM_Defcon_ReadControlRegister\000"
 1475      44656663 
 1475      6F6E5F52 
 1475      65616443 
 1475      6F6E7472 
 1476              	.LASF20:
 1477 02c0 50574D5F 		.ascii	"PWM_Defcon_Start\000"
 1477      44656663 
 1477      6F6E5F53 
 1477      74617274 
 1477      00
 1478              	.LASF18:
 1479 02d1 6374726C 		.ascii	"ctrl\000"
 1479      00
 1480              	.LASF38:
 1481 02d6 50574D5F 		.ascii	"PWM_Defcon_ReadCapture\000"
 1481      44656663 
 1481      6F6E5F52 
 1481      65616443 
 1481      61707475 
 1482              	.LASF17:
 1483 02ed 73697A65 		.ascii	"sizetype\000"
 1483      74797065 
 1483      00
 1484              	.LASF29:
 1485 02f6 50574D5F 		.ascii	"PWM_Defcon_WriteCompare\000"
 1485      44656663 
 1485      6F6E5F57 
 1485      72697465 
 1485      436F6D70 
 1486              	.LASF6:
 1487 030e 6C6F6E67 		.ascii	"long long int\000"
 1487      206C6F6E 
 1487      6720696E 
 1487      7400
 1488              	.LASF32:
 1489 031c 696E7465 		.ascii	"interruptMode\000"
 1489      72727570 
 1489      744D6F64 
 1489      6500
ARM GAS  C:\Users\ryan\AppData\Local\Temp\ccwBGjTx.s 			page 45


 1490              	.LASF2:
 1491 032a 73686F72 		.ascii	"short int\000"
 1491      7420696E 
 1491      7400
 1492              	.LASF33:
 1493 0334 50574D5F 		.ascii	"PWM_Defcon_ReadCounter\000"
 1493      44656663 
 1493      6F6E5F52 
 1493      65616443 
 1493      6F756E74 
 1494              	.LASF4:
 1495 034b 6C6F6E67 		.ascii	"long int\000"
 1495      20696E74 
 1495      00
 1496              	.LASF13:
 1497 0354 63686172 		.ascii	"char\000"
 1497      00
 1498              	.LASF19:
 1499 0359 50574D5F 		.ascii	"PWM_Defcon_interruptState\000"
 1499      44656663 
 1499      6F6E5F69 
 1499      6E746572 
 1499      72757074 
 1500              	.LASF16:
 1501 0373 6C6F6E67 		.ascii	"long double\000"
 1501      20646F75 
 1501      626C6500 
 1502              	.LASF0:
 1503 037f 7369676E 		.ascii	"signed char\000"
 1503      65642063 
 1503      68617200 
 1504              	.LASF30:
 1505 038b 636F6D70 		.ascii	"compare\000"
 1505      61726500 
 1506              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
